<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hackety hack hack]]></title>
  <link href="http://blog.johl.io/atom.xml" rel="self"/>
  <link href="http://blog.johl.io/"/>
  <updated>2013-10-24T22:15:08+02:00</updated>
  <id>http://blog.johl.io/</id>
  <author>
    <name><![CDATA[Jens Ohlig]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Autovivication in Python]]></title>
    <link href="http://blog.johl.io/blog/2013/10/20/autovivication/"/>
    <updated>2013-10-20T14:19:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/10/20/autovivication</id>
    <content type="html"><![CDATA[<blockquote><p>Show me your flowcharts and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won’t usually need your flowcharts; they’ll be obvious.</p><footer><strong>Fred Brooks</strong><cite>The Mythical Man-Month: Essays on Software Engineering</cite></footer></blockquote>


<p>Datenstrukturen sind Magie. In einer magischen, fast vergessenen Sprache wie Perl sind sie sogar noch ein bisschen magischer, um nicht zu sagen: frankensteinhaft. Die Rede ist von Autovivication.</p>

<p>Wenn ich einen langen komplexen Pfad in meinem Dateisystem anlege, der ein Directory in einem noch zu erstellenden Directory erstellt, möchte mein Unix-System nichts davon wissen:</p>

<pre><code>[~]$ mkdir a/b/c
mkdir: a/b: No such file or directory
</code></pre>

<p><a title="By Universal Studios (Dr. Macro) [Public domain], via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File%3AFrankenstein's_monster_(Boris_Karloff).jpg"><img width="256" align="left" style="margin-right: 10px" alt="Frankenstein&#039;s monster (Boris Karloff)" src="http://blog.johl.io//upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Frankenstein%27s_monster_%28Boris_Karloff%29.jpg/256px-Frankenstein%27s_monster_%28Boris_Karloff%29.jpg"></a> In anderen Betriebssystemen wäre das anders. Die fehlenden, implizit genannten Schachtelungen, würden automatisch erzeugt. Wie von Geisterhand würden sie ins Leben gerufen werden. Es lebt! <strong>Ergänzung</strong>: <em>Ganz richtig in den Kommentaren bemerkt:</em> <code>mkdir -p a/b/c</code> <em>bringt unter Unix natürlich auch das erwünschte Ergebnis</em>.</p>

<p>Autovivication ist je nach Erwartungshaltung an die Programmiersprache eine überraschende oder logische Eigenschaft von verschachelten Datentypen wie Hashes in Perl, die auch als assoziative Arrays oder in Python-Lingo als Dictionaries bekannt sind. Wenn ich ein Elemente zuweise oder abfrage, das in einem anderen Element geschachtelt ist, das ich bisher noch nicht belegt habe, wird das implizit benannte Element der höheren Schachtelungstiefe automisch angelegt oder eben belebt.</p>

<p>Die automatische Belebung hilft zum Beispiel, wenn ich mit einem Klumpen an Daten arbeite, vielleicht aus einer Open-Data-Quelle wie der <a href="http://daten.berlin.de/datensaetze/als-naturdenkmale-gesch%C3%BCtzte-findlinge-charlottenburg-wilmersdorf">Liste der als Naturdenkmale geschützte Findlinge in Charlottenburg-Wilmersdorf</a> oder einer Abfrage <a href="http://www.wikidata.org/w/api.php?action=wbgetentities&amp;sites=dewiki&amp;titles=Ada%20Lovelace&amp;format=jsonfm&amp;languages=de">bei Wikidata</a>. In dem Klumpen können diverse Verschachtelungstiefen bestehen, ohne dass ich die dahinterstehende Struktur im Detail kenne oder kennen möchte. Wenn ich die Struktur naiv in ein assoziatives Array hineinschlürfe, geht das mit Perl, in anderen Sprachen würde ich höflich, aber bestimmt darauf hingewiesen werden, dass ich einem noch nicht definierten Key einen Wert zuweisen will und das Programm stürzt typischerweise ab. Besonders drollig stellt sich hier PHP mit einem Verhalten an, das als Pseudo-Autovivication bezeichnet werden könnte: Zuweisungen an noch nicht vorher definierte Keys beliebiger Schachtelungstiefe gehen (wie in Perl), Abfragen von nicht definierten Keys gehen nicht (wie in anderen Sprachen).</p>

<p>Schauen wir uns doch mal Autovivication in Perl an:</p>

<figure class='code'><figcaption><span>Autovivication in Perl</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/perl -w</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Data::</span><span class="n">Dumper</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">%data</span><span class="p">;</span>
</span><span class='line'><span class="nv">$data</span><span class="p">{</span><span class="mi">1</span><span class="p">}{</span><span class="mi">2</span><span class="p">}{</span><span class="mi">3</span><span class="p">}</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="n">Dumper</span><span class="p">(</span><span class="nv">%data</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Das CPAN-Modul <code>Data::Dumper</code> ist möglicherweise vorher noch mit <code>cpan install Data::Dumper</code> zu installieren, bevor es benutzt werden kann. Es dient einfach dazu, eine Datenstruktur in Perl zu inspizieren oder formatiert auszugeben. Mit <code>my %data;</code> definieren wir ein assoziatives Array (Hash) namens data. <code>$data{1}{2}{3} = 10;</code> weist diesem Hash den Wert 10 zu für den Key 3, der in einem Hash mit dem Key 2 steckt, das wiederum in dem Hash-Key 1 von <code>data</code> steckt. Für diejenigen, die in der schwarzen Magie von Perl nicht (mehr) so bewandert sind: Bei der Zuweisung wird aus dem Hash-Vorzeichen <code>%</code> ein <code>$</code>, weil die Variable hier in einem <a href="https://de.wikipedia.org/wiki/Skalare_Variable">skalaren Kontext</a> benutzt wird.</p>

<p>Die Ausgabe ergibt dann:</p>

<pre><code>$VAR1 = '1';
$VAR2 = {
          '2' =&gt; {
                   '3' =&gt; 10
                 }
        };
</code></pre>

<p>In Python wäre der entsprechende Code nicht möglich und würde mit einem Fehler abbrechen:</p>

<pre><code>&gt;&gt;&gt; data = {}
&gt;&gt;&gt; data[1][2][3] = 10
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 1
</code></pre>

<p>Da für die Keys der höheren Schachtelungstiefe noch nichts angelegt wurde, wird die Ausnahme KeyError geworfen und das Programm beendet.</p>

<p>In seiner Standard-Library hat Python allerdings im Modul <code>collections</code> auch den Datentyp <code>defaultdict</code>. Gedacht ist er dafür, um Dictionaries zu erzeugen, bei denen ein Defaultwert schon vorgegeben ist — wenn der Wert nicht definiert ist, soll zum Beispiel standardmäßig 0 als Wert angelegt werden.</p>

<p>Indem wir <code>defaultdict</code> auf leicht kreative Weise mißbrauchen, können wir Autovivication in Python bekommen. Was wäre, wenn wir die Datenstruktur rekursiv definieren und als Defaultwert eine Funktionsreferenz auf eine die Datenstruktur selbst erzeugende Funktion angeben?</p>

<p>Wenn sich die leichte Verwirrung im Kopf über den letzten Satz und rekursiv definierte Datenstrukturen gelegt haben, können wir uns diese Lösung auch mal einfach ansehen:</p>

<figure class='code'><figcaption><span>Autovivication in Python</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">defaultdict</span>
</span><span class='line'><span class="n">AutovivicationDict</span> <span class="o">=</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">defaultdict</span><span class="p">(</span><span class="n">AutovivicationDict</span><span class="p">)</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">AutovivicationDict</span><span class="p">()</span>
</span><span class='line'><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">2</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hurra, Python kann jetzt Autovivication! Allerdings sind die auf diese Weise erzeugten Dictionaries immer noch ziemlich besonders. Wir können (in beliebiger Schachtelungstiefe) zuweisen und abfragen, aber dass es kein herkömmliches Dictionary ist, stellen wir fest, wenn wir es uns einmal ansehen:</p>

<pre><code>&gt;&gt;&gt; data
defaultdict(&lt;function &lt;lambda&gt; at 0x10a774938&gt;, {1: defaultdict(&lt;function &lt;lambda&gt; at 0x10a774938&gt;, {2: defaultdict(&lt;function &lt;lambda&gt; at 0x10a774938&gt;, {3: 10})})})
</code></pre>

<p>Huch, da ist ja alles voller Referenzen auf eine <a href="https://de.wikipedia.org/wiki/Anonyme_Funktion">anonyme Funktion</a>! Für die meisten Anwendungen sollte das keinen Unterschied machen, mit welchem Wert das <code>defaultdict</code> gefüllt wird. Wenn wir allerdings eine Umwandlung unseres speziellen autovivizierten Dictionaries in ein herkömmliches Dictionary brauchen (etwa, um daraus JSON zu machen), brauchen wir noch eine Umwandlungsfunktion. Weil wir gerade so schön im Flow sind, definieren wir diese auch wieder rekursiv und unter Einsatz von <code>lambda</code>:</p>

<figure class='code'><figcaption><span>dictify</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">dictify</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">dd</span><span class="p">:</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span><span class="n">dictify</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">dd</span><span class="o">.</span><span class="n">items</span><span class="p">()}</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">dd</span><span class="p">,</span> <span class="n">defaultdict</span><span class="p">)</span> <span class="k">else</span> <span class="n">dd</span>
</span></code></pre></td></tr></table></div></figure>


<p>Und jetzt haben wir hier ein ganz normales Dictionary:</p>

<pre><code>&gt;&gt;&gt; dictify(data)
{1: {2: {3: 10}}}
</code></pre>

<p>Wie bereits eingangs erwähnt: Datenstrukturen sind magisch.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Schnelle Links]]></title>
    <link href="http://blog.johl.io/blog/2013/09/03/schnelle-links/"/>
    <updated>2013-09-03T17:24:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/09/03/schnelle-links</id>
    <content type="html"><![CDATA[<ul>
<li>Welche Farbe hat das Universum? <a href="https://en.wikipedia.org/wiki/Cosmic_latte">Cosmic Latte</a></li>
<li>Falls jemand gedacht hat, MEGA von Kim Dotcom sei sicher: <a href="http://nzkoz.github.io/MegaPWN/">MEGApwn</a></li>
<li>Schwarze Zukunft: <a href="http://www.iafrofuturism.com/">Afrofuturism: The World of Black Sci Fi and Fantasy Culture</a></li>
<li>Zelluläre Automaten und Rogue-likes: <a href="http://roguebasin.roguelikedevelopment.org/index.php?title=Cellular_Automata_Method_for_Generating_Random_Cave-Like_Levels">Cellular Automata Method for Generating Random Cave-Like Levels</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Steile These]]></title>
    <link href="http://blog.johl.io/blog/2013/08/13/steile-these/"/>
    <updated>2013-08-13T08:12:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/08/13/steile-these</id>
    <content type="html"><![CDATA[<p>Ich mach das mal mit der steilen These bzw. Prophezeiung ohne empirische Basis, aber mit unbestimmtem Bauchgefühl.</p>

<p>Here we go:</p>

<p>In etwa zwei Jahren werden wir, beziehungsweise relevante Teile der Internetnutzerschaft, unsere Internetkommunikation aufgeteilt haben. Wir werden das Clearnet benutzen, um Dinge in der Wikipedia nachzuschlagen oder Katzenvideos zu schauen oder zu bloggen. Wir werden unsere persönliche Kommunikation (Chat, Mail) und unseren Austausch von Medien im Darknet vornehmen, vielleicht in <a href="http://hyperboria.net/">Hyperboria</a>.</p>

<p>Mag jemand wetten?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Iron Blogging]]></title>
    <link href="http://blog.johl.io/blog/2013/08/11/iron-blogging/"/>
    <updated>2013-08-11T23:49:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/08/11/iron-blogging</id>
    <content type="html"><![CDATA[<p><img src="https://s3.amazonaws.com/f.cl.ly/items/140H122y1h030z2C0N0I/556786_10201359295738846_553461838_n.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Totalreflexion der Daten durch Prism]]></title>
    <link href="http://blog.johl.io/blog/2013/07/07/totalreflexion-der-daten-durch-prism/"/>
    <updated>2013-07-07T01:33:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/07/07/totalreflexion-der-daten-durch-prism</id>
    <content type="html"><![CDATA[<p><a title="By Zátonyi Sándor, (ifj.) Fizped (Own work) [GFDL (http://www.gnu.org/copyleft/fdl.html) or CC-BY-SA-3.0 (http://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File%3ASz%C3%ADnsz%C3%B3r%C3%B3d%C3%A1s_prizm%C3%A1n1.jpg"><img align="left"width="256" alt="Színszóródás prizmán1" src="http://blog.johl.io//upload.wikimedia.org/wikipedia/commons/thumb/4/47/Sz%C3%ADnsz%C3%B3r%C3%B3d%C3%A1s_prizm%C3%A1n1.jpg/512px-Sz%C3%ADnsz%C3%B3r%C3%B3d%C3%A1s_prizm%C3%A1n1.jpg"/></a> Das <a href="https://de.wikipedia.org/wiki/Prisma_(Optik)">Prisma aus der Optik</a> ist eine spezielle Form des geometrischen Körpers Prisma, das benutzt werden kann, um Licht in seine Bestandteile aufzubrechen. Bei einer verbreiteten Form des Prisma wird das Licht dabei mit Totalreflexion zurückgeworfen, ähnlich der Kugel beim Billiardspiel. Nach einigen Runden teilen sich die die unterschiedlichen Farbtöne des weissen Lichts nach der Reisegeschwindigkeit ihrer Wellenlängen auf. Aus dem Klumpen Big Data des weissen Lichts werden unterscheidbare Daten oder Metadaten extrahiert.Beim NSA-Überwachungsprogramm <strong>P</strong>lanning Tool for <strong>R</strong>esource <strong>I</strong>ntegration, <strong>S</strong>ynchronization, and <strong>M</strong>anagement, kurz <em>Prism</em>, wird mindestens die gesamte Internetkommunikation der westlichen Welt durchgeleitet und versucht, aus dieser Kommunikation Daten zu extrahieren, auf deren Grundlage Entscheidungen getroffen werden.</p>

<p><span class='pullquote-right' data-pullquote='Vermutlich gab es zu keiner Zeit eine umfangreiche Überwachung der gesamten Bevölkerung. '>
Vermutlich gab es zu keiner Zeit eine umfangreiche Überwachung der gesamten Bevölkerung. Ausgehend von dem beschämenden Zitat des Bundespräsidenten Gauck, mit den Aktenschränken der Stasi sei Prism nicht zu vergleichen, haben OpenDataCity <a href="http://apps.opendatacity.de/stasi-vs-nsa/">eine Visualierung</a> erstellt, welche Fläche auf dem Erdball die Daten bei Prism einnehmen würden, wenn sie als Aktenschränke ausgedruckt werden würden. <a href="https://de.wikipedia.org/wiki/Karte_im_Ma%C3%9Fstab_1:1">Die Idee einer Karte im Maßstab 1:1</a>, wie sie schon Borges oder Eco beschrieben haben, kommt in den Sinn.
</span></p>

<iframe src="http://apps.opendatacity.de/stasi-vs-nsa/frame.html" width="100%" height="580" scrolling="no" frameborder="0" style="margin:0"><a href="http://apps.opendatacity.de/stasi-vs-nsa/frame.html">Stasi versus NSA - Wieviel Platz brauchen die Aktenschr&auml;nke?</a></iframe>


<br><small>Gehe zu <a href="http://apps.opendatacity.de/stasi-vs-nsa/">Stasi versus NSA</a>.  Realisiert von <a href="http://www.opendatacity.de/">OpenDataCity</a> (<a rel="license" href="http://creativecommons.org/licenses/by/3.0/de/">CC-BY 3.0</a>)</small>


<p>Wenn wir also spätesens seit Juni in der Gewissheit der ständigen Vollüberwachung leben und sich die Ereignisse und Enthüllungen fast täglich überschlagen, stellt sich für mich die Frage, wo noch die politischen Handlungsoptionen innerhalb des Prisma liegen, was wir bedeckt unter der Karte im Maßstab 1:1 noch erreichen können.</p>

<p>Der viel zu gute, viel zu wenig gelesene Science-Fiction-Roman &#8221;<a href="https://de.wikipedia.org/wiki/Der_Schockwellenreiter">Der Schockwellenreiter</a>&#8221; von John Brunner aus dem Jahre 1975(!) endet mit einer Volksabstimmung, nachdem ein weltumspannendes Überwachungsnetzwerk öffentlich gemacht und durch einen Computerwurm unschädlich gemacht wurde. Die Einleitung auf dem Stimmzettel für alle Menschen des Planeten lautet:</p>

<blockquote><p>„Wir sind eine zivilisierte Spezies. Deshalb soll künftig niemand einen unrechtmäßigen Vorteil aufgrund der Tatsache erlangen, dass wir gemeinsam mehr wissen, als einer von uns wissen kann.“</p><footer><strong>John Brunner</strong><cite>Der Schockwellenreiter</cite></footer></blockquote>


<p><span class='pullquote-right' data-pullquote='Es liegt an uns, aus der Technologie und Infrastruktur von Prism die Grundlage für eine maschinenlesbare Regierung zu bauen. '>
Es ist richtig, sich über Prism zu empören. Es ist verständlich, wenn wir verzweifeln wollen (auch wenn das keine Lösung sein kann). Es ist wichtig, jetzt Kryptographie als praktische Form der digitalen Selbstverteidigung zu lernen oder es anderen Menschen beizubringen. Noch wichtiger ist es aber, aus dem unfassbaren Skandal der totalen Überwachung politische Forderungen zu entwickeln. Meine Forderung für ein besseres, menschenwürdigeres digitales Leben bleibt die gleiche wie vor Bekanntwerden von Prism, wenn auch mit einem anderen Betrachtungswinkel: Mehr Daten für alle. Es liegt an uns, aus der Technologie und Infrastruktur von Prism die Grundlage für eine maschinenlesbare Regierung zu bauen.</p>

<p>Wer mag, kann das als digitale Abrüstung im Überwachungsstaat sehen: Schwerter zu Pflugscharen, Stahlhelme zu Nachttöpfen, Prism zur offenen strukturierten Datenbasis über Regierungshandeln. Die Frage nach politischer Teilhabe anhand von Daten gehört nachdrücklich gestellt und die gewaltvolle Aufteilung in allwissende Geheimdienste und einen Planeten informationeller Habenichtse muss politisch aufgehoben werden.</p>

<p>Stellt euch die Möglichkeiten vor, die wir hätten, wenn wir gemeinsam auf Basis der größten Datensammlung aller Zeiten (über öffentliche, politische Daten, nicht über die private Kommunikation von Menschen untereinander) verfügen könnten. Jeder Mensch könnte zumindest zeitweise und nach Feierabend zur Politikerin werden, um Expertise einzubringen. Ein Landwirt hätte an seinem PC nach getaner Arbeit einen gigantischen wissenschaftlichen Dienst zur Verfügung zur Untermauerung des Bauchgefühls, dass irgendwas mit der Landwirtschaftspolitik nicht in Ordnung ist. Andere würden ihr jeweiliges politisches Interessengebiet beackern. Die Bevölkerung würde sich (wenn auch nur punktuell und nur ein paar Minuten in der Woche) in eine gigantische, unglaublich gut informierte Opposition verwandeln, die in einem ständigen Kreislauf Kleiner Anfragen die beste Politik für uns alle aus der Datenflut extrahiert.</p>

<p>Erledigen wir Prism und andere Schnüffelsysteme politisch, indem wir dafür sorgen, dass künftig niemand einen unrechtmäßigen Vorteil aufgrund der Tatsache erlangen, dass wir gemeinsam mehr wissen, als einer von uns wissen kann. Beenden wir die Herrschaft der Geheimdienste über die Daten und machen sie nutzbar für uns alle.
</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's next?]]></title>
    <link href="http://blog.johl.io/blog/2013/06/19/what-next%3F/"/>
    <updated>2013-06-19T01:11:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/06/19/what-next?</id>
    <content type="html"><![CDATA[<ol>
<li>Refresh your forgotten GPG/PGP knowledge. Take steps to use it more often. Use OTR. Learn about harddisk encryption.</li>
<li><a href="http://www.schneier.com/book-applied.html">Read about cryptography.</a> Write a ciphersaber. If you didn&#8217;t
understand the last sentence, don&#8217;t just read over it, assuming it&#8217;s nerdy nonsense. Use a search engine to find out what a ciphersaber is.</li>
<li>Understand that no cryptographic technology is a silver bullet against the use of <a href="http://xkcd.com/538/">sheer brute force by a determined surveillance state</a>. Cryptography won&#8217;t help you against <a href="http://www.telegraph.co.uk/technology/facebook/6213590/Gay-men-can-be-identified-by-their-Facebook-friends.html">information that comes from correlations and dependencies</a>.</li>
<li>Become politically active. Don&#8217;t become paranoid, use the greatest communication tool we ever had to free yourself.</li>
<li>Build upon hope in a hopeless environment.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zwei oder drei Dinge, die es zu Karaoke zu sagen gibt]]></title>
    <link href="http://blog.johl.io/blog/2013/06/09/karaoke/"/>
    <updated>2013-06-09T20:47:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/06/09/karaoke</id>
    <content type="html"><![CDATA[<p>Bei Wikimedia Deutschland gibt es regelmäßige gemeinsame Karaoke-Abende <a href="http://www.karaokemonster.de/">in Berlins seltsamster Karaoke-Bar</a> als Team-Building-Experience (oder Team-Breaking-Experience, je nachdem), die nach einem hochkomplizierten Algorithmus festgelegt werden: Wenn innerhalb von 48 Stunden mehrere Leute fragen &#8220;Wann ist eigentlich wieder Karaoke?&#8221; wird ein neuer Termin gesucht.</p>

<p>Es ist schade, dass kaum eine Kunstform die Problematik von Mashup und Copyright so sehr vor Augen führt wie Karaoke: Die Gesangskünste der Gesellschaft zur Förderung Freien Wissens e.V werden es wegen fehlender CC-Lizensierung wohl nie auf <a href="http://commons.wikimedia.org/">Commons</a> schaffen und werden auch bei YouTube nicht in diesem Land verfügbar sein. Das tut uns leid.</p>

<p>Zum Ausgleich ein bisschen Freies Wissen um Karaoke, das 1971 von Daisuke Inoue erfunden wurde.</p>

<ol>
<li>Karaoke kann tödlich sein.  Auf den Philippinen sorgt seit Jahrzehnten das Phänomen der <a href="http://en.wikipedia.org/wiki/My_Way_killings">&#8220;My Way Killings&#8221;</a> für Unruhe.  Eine Reihe von Todesfällen in Karaoke-Bars wird dort immer wieder mit dem Lied von Frank Sinatra in Verbindung gebracht. Dabei werden Sänger von anderen aufgebrachten Gästen erschossen, wenn die Sänger bei ihrer Performance allzu großzügig beim Treffen der Töne sind. Ob es sich hier um ein Phänomen handelt, das in dem gewalttätigen und alkoholisierten Klima der Bars entsteht, in denen &#8220;My Way&#8221; einfach häufig gesungen wird, oder ob der triumphale und fast arrogante Text des Liedes damit zu tun hat, ist umstritten. Etliche philippinische Karaoke-Bars haben &#8220;My Way&#8221; jedenfalls aus ihrem Programm verbannt.</li>
</ol>


<p><img class="left" src="http://upload.wikimedia.org/wikipedia/commons/d/d7/Kabuki-makeup.PNG">
2. Das Wort für das eigene Spezial-Vorzeige-Lied beim Karaoke, 十八番, hat eine recht interessante Geschichte. Ich kannte es zuerst in seiner koreanischen Aussprache 십팔번 (&#8220;ship-pal-beon&#8221;) als Fachterminus für das Lied, das man beim Karaoke auswählt, um zu zeigen was man für eine supertolle Gesangsstimme hat. Der Special Move. Die Superkraft. Richtig klar ist mir nicht geworden, was es bedeutet, wörtlich heisst es &#8220;der 18er Kasten&#8221;. Tatsächlich kommt es aus dem Japanischen, was ungewöhnlich ist, weil japanische Lehnwörter in Korea aus geschichtlichen Gründen nicht sehr gern gesehen sind. Der 18er Kasten war tatsächlich früher ein Kasten, in dem Theaterstücke aufbewahrt wurden, nämlich die <a href="http://en.wikipedia.org/wiki/Kabuki_J%C5%ABhachiban">18 repräsentativen Theaterstücke Kabuki Jūhachiban</a> aus der Schauspielerfamilie <a href="http://en.wikipedia.org/wiki/Ichikawa_Danj%C5%ABr%C5%8D">Ichikawa</a>. Diese Stücke, von denen heutzutage nicht mehr alle regelmäßig gespielt werden, gelten als die Vorzeigestücke des Kabuki-Theaters. Heutzutage hat <a href="http://en.wiktionary.org/wiki/%E5%8D%81%E5%85%AB%E7%95%AA">十八番</a> (auf japanisch &#8220;ohako&#8221; ausgesprochen) die Bedeutung &#8220;ein Talent, in der jemand gut ist&#8221; oder &#8220;eine Handlung oder Aufführung, die jemand häufig zum besten gibt&#8221;.<p></p>
3. Wo wir gerade bei Japan sind — möglicherweise hat Karaoke über Umwege einen politischen Ursprung. Die <a href="http://en.wikipedia.org/wiki/Utagoe_coffeehouse">Utagoe-Kaffeehäuser</a> in den 1950er und 1960er Jahren waren Cafés, in denen sich die Gäste zum gemeinsamen Singen trafen. Diese Cafés, die heutzutage fast vollständig durch Karaoke-Bars abgelöst sind, hatten einen linken Hintergrund und boten u.a. der sozialistischen und der kommunistischen Partei oder Gewerkschaften einen Treffpunkt. Singen war hier nicht nur Quatsch, den man mit betrunkenem Kopf macht, sondern ernsthafte politische Arbeit. Auch das sollte beim nächsten Karaoke-Ausflug bedacht werden.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netzneutralität auf Layer 9]]></title>
    <link href="http://blog.johl.io/blog/2013/05/31/netzneutralitt-auf-layer-9/"/>
    <updated>2013-05-31T01:07:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/05/31/netzneutralitt-auf-layer-9</id>
    <content type="html"><![CDATA[<p>Ich finde es nicht unwichtig, wenn technische Aspekte der gegenwärtigen Debatte um die Netzneutralität diskutiert werden. Angesichts einer <a href="http://www.zeit.de/news/2013-05/24/bundestag-petition-fuer-netzneutralitaet-nimmt-huerde-fuer-den-bundestag-24130802">Petition an den Bundestag</a>, die sich anschickt, der &#8220;Zensursula-Moment&#8221; der Netzbewegung im Jahr 2013 zu werden, ist die Frage legitim, ob politische Forderungen an die Politik gestellt werden sollen, die mit den technischen Gegebenheiten nichts zu tun haben. Der Wunsch, irgendwas mit Internet zu machen, war sicher auch die Motivation für Ursula von der Leyen und Karl-Theodor von Guttenberg, ein technisch sinnloses und politisch fatales Zugangserschwerungsgesetz einzureichen. &#8220;Ich will aber, dass es technisch so ist&#8221; verbunden mit einem trotzigen Aufstampfen gilt nicht als gutes Argument gegen die normative Kraft des Faktischen, auch nicht, wenn es aus der Netzbewegung kommen sollte. Trotz der Wichtigkeit der technischen Kritik geht diese allerdings meines Erachtens am Kern der politischen Forderung vorbei.</p>

<p>Stellvertretend für Viele hat Hans Hübner seine <a href="http://netzhansa.blogspot.de/2013/05/drosselkom-eine-diskussion-die-der.html">technisch fundierte Kritik an Forderungen zur Netzneutralität</a> aufgeschrieben: <em>&#8220;Liebe Netzgemeinde, fordert doch bitte mal was Präzises, technisch Realisierbares, und nicht von technischen Dienstleistern, dass sie Euch bitte für 30 Euro im Monat die Illusion von &#8220;Freiheit&#8221; erzeugen sollen.&#8221;</em></p>

<p>Es ist richtig, dass es IP-basierte Dienste gibt, die ohne Priorisierung nicht funktionieren: IP-Fernsehen, Voice over IP und Bereiche der Telemedizin brauchen verlässliche Mechanismen zu Quality of Service, um sinnvoll eingesetzt zu werden. Neue Technologien in der Medizin, Kommunikation oder Unterhaltung sind per se sinnvoll für mich — durch eine falsch verstandene Netzneutralität, die alles verbietet, was nicht nach dem Best-Effort-Prinzip geroutet wird, würde ich mich eingeschränkt fühlen. Die pauschale Ablehnung von Technik kann nicht der Punkt sein.  Die Forderung ist vielmehr: Der Zugang zum Internet und allem, was einem zeigen kann, wie diese Welt funktioniert, sollte unbegrenzt und frei sein.</p>

<p><img class="left" src="http://farm1.staticflickr.com/36/96987427_d3a0582fdc.jpg" title="CC-BY-SA by PhilWolff" >
Ein seit den 1980er Jahren vom Internet Systems Consortium vertriebenes <a href="http://store.isc.org/ProductDetails.asp?ProductCode=tshirt-layer">T-Shirt</a> ergänzt das OSI-Schichten-Modell bei Netzwerken humoristisch: Auf Schicht 8 gibt es den &#8220;financial layer&#8221; und auf Schicht 9 den &#8220;political layer&#8221;. Der Kampf um Netzneutralität wird auf Layer 9 geführt.</p>

<p><span class='pullquote-right' data-pullquote='Netzneutralität bedeutet, die diskriminierungsfreie Teilhabe am Internet zu garantieren. '>
Netzneutralität bedeutet, die diskriminierungsfreie Teilhabe am Internet zu garantieren. Das kann auch bedeuten, dass Telemedizin (oder meinetwegen Fernsehübertragungen) auch denen zur Verfügung stehen, die weniger Geld haben. Das Projekt <a href="http://wikimediafoundation.org/wiki/Wikipedia_Zero">Wikipedia Zero</a>, das in Ländern des globalen Südens Zugang zu Wikipedia per Mobiltelefon völlig kostenlos durch die Netzbetreiber zu verwirklichen versucht, ist streng gesehen eine Verletzung der Netzneutralität, aber zielt auf die Teilhabe an der digitalen Welt. Diese Teilhabe muss politisch ausgefochten und politisch festgelegt werden, auf einer Netzwerkschicht, die vom &#8220;managed network&#8221; der Telekom entfernt liegt. Auf einer abstrakten Ebene weiter gehen die politischen Forderungen, die verkürzt und prägnant auf das Schlagwort &#8220;Netzneutralität&#8221; gebracht werden, sogar weit über alles hinaus, was mit Netzwerktechnik zu tun hat: Teilhabe am Digitalen betrifft auch Fragen nach freien Werken aus Kunst und Kultur. Es ist nur ein Teilaspekt, wenn unter Verletzung von Netzneutralität Filesharing ausgefiltert wird — die kollektive Halluzination von Copyright und der Ausschluss von Bevölkerungsschichten in Bezug auf kulturelle Werke im Netz passieren auf Layer 9.
</span></p>

<p>Ja, es gibt durchaus konkrete technische Forderungen zur Netzneutralität, die sich auf niedrigere Netzwerkschichten beziehen. Preistranparenz, QoS-Transparenz und verbindliche Peering-Regeln etwa, kein Monopol auf der letzten Meile, frei wählbare DSL-Profile und feste IPv6-Präfixe oder IP-Adressen, um vom Konsumenten zum Teilnehmer im Netz zu werden, sind technische Forderungen an die Carrier. Natürlich graut es mir auch davor, wenn <a href="http://mobil.abendblatt.de/hamburg/article116670240/Informatikstreit-Walter-Scheuerl-im-Internet-Shitstorm.html">mit gefährlichem Halbwissen ausgestattete Politiker</a> im Bundestag technisch komplizierte Details zu Netzwerken debattieren sollen. Aber vielleicht geht es auch weniger um technische Details auf den Schichten unterhalb von Layer 9. Versuchen wir den höchsten Layer netzneutral zu gestalten.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laufende Projekte]]></title>
    <link href="http://blog.johl.io/blog/2013/05/13/laufende-projekte/"/>
    <updated>2013-05-13T22:45:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/05/13/laufende-projekte</id>
    <content type="html"><![CDATA[<p>Neben meiner Arbeit beschäftigen mich zur Zeit zwei Projekte (plus einige andere Dinge, die ein anderes Mal erzählt werden sollen), die ich noch nicht direkt in diesem Blog erwähnt habe.</p>

<h2>Das Curry-Buch - Funktional programmieren lernen mit JavaScript von Jens Ohlig, Stefanie Schirmer, Hannes Mehnert</h2>

<p><img class="left" src="ftp://ftp.oreilly.de/pub/ora/graphics/book_covers/hi-res/9783868993691.jpg" width="400" title="Das Curry-Buch - Funktional programmieren lernen mit JavaScript von Jens Ohlig, Stefanie Schirmer, Hannes Mehnert" ></p>

<p>Ende Juni erscheint unsere <a href="http://www.oreilly.de/catalog/currybuchger/index.html">Einführung in die funktionale Programmierung</a> am Beispiel von JavaScript bei O&#8217;Reilly. Wir haben lange an diesem Buch gesessen, vielleicht sogar ein bisschen zu lange, aber ich bin mit dem Ergebnis sehr zufrieden. Neben map, reduce und Kolleginnen, dem Lambda-Kalkül und den gefürchteten Monaden-Gesetzen treten dort auch Vindaloo-Curry, Auberginen und ein leckeres Mango-Lassi auf, denn gutes Programmieren ist wie gutes Kochen und der Begriff Curry hat nicht nur in der indischen Küche, sondern auch in der theoretischen Informatik eine besondere Bedeutung. Ich bastle gerade an der Webseite zu dem Buch, die sicher bald folgt.</p>

<p>Das Buch konnte bei O&#8217;Reilly unter einer CC-Lizenz, nämlich <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/de/">CC-BY-NC-SA 2.0 DE</a> erscheinen, was mich besonders freut, dass der Verlag bei so einem mutigen Experiment dabei ist und die Weitergabe zu nicht-kommerziellen Zwecken gestattet. Nach etlichen Schreib- und Korrektursessions der letzten Monate, bei denen ich das Projekt streckenweise fast nicht mehr sehen konnte, bin ich jetzt sehr stolz auf das, was daraus geworden ist.  Wie mir jemand schrieb ist es das Buch, dass er gerne gelesen hätte, als er anfing, sich mit funktionaler Programmierung zu beschäftigen. Genauso ging es uns auch. Deshalb haben wir dieses Buch geschrieben.</p>

<h2>Ohai Brause</h2>

<p><img class="right" src="http://ohai-brause.de/assets/img/ohai-large.png"></p>

<p>Irgendwann kam mein Arbeitskollege Abraham zu mir und berichtete davon, dass er völlig übermüdet mit seinem Kumpel Markus aus Karlsruhe eine Vision hatte. Statt sich mit Club- oder sonstiger Mate aufzutanken, wäre doch eine koffeinhaltige Schleckbrause aus dem Tütchen, wie wir es aus unserer Kindheit kennen, eine tolle Idee. Nach einigen Experimenten und viel Zittern und erhöhter Herzfrequenz beim Austüfteln der richtigen Koffeinladung haben wir einen ziemlich bitteren Prototypen entwickelt, der mit Zitronenaroma einen Geschmack in Richtung Grapefruit bekommt und so richtig wach macht (fast doppelt so wach wie ein Energy-Drink oder fast dreimal so stark wie ein Espresso).</p>

<p>Unser Kleinunternehmen, das hauptsächlich von dem übermenschlichen Engagement von Abraham und Markus lebt, läuft ganz gut. Neugierige können sich die Tütchen mit der Matrix-Katze, die überrascht &#8220;OHAI!&#8221; ausruft, <a href="http://ohai-brause.de/">online bestellen</a>. Ausserdem gibt es Ohai Brause bei ausgewählten Händlern, in Berlin z.B. in der c-base, bei der Meta Mate Bar oder bei der Filmkunst-Videothek Delikatessen, aber <a href="http://ohai-brause.de/kaufen.html">schaut selbst in die Liste</a>. Diesen Sommer gibt es unser kleines Produkt dann auch bei einigen Events, etwa der GPN Gulaschprogrammiernacht. Bleibt wach, okay?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Neues vom Angriff der Zukunft auf die Gegenwart]]></title>
    <link href="http://blog.johl.io/blog/2013/04/19/zukunft/"/>
    <updated>2013-04-19T00:05:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/04/19/zukunft</id>
    <content type="html"><![CDATA[<p><a title="By Jean Marc Cote [Public domain or Public domain], via
Wikimedia Commons"
href="http://commons.wikimedia.org/wiki/File%3AFrance_in_XXI_Century._Electric_scrubbing.jpg"><img
width="512" alt="France in XXI Century. Electric scrubbing"
src="http://blog.johl.io//upload.wikimedia.org/wikipedia/commons/thumb/a/ae/France_in_XXI_Century._Electric_scrubbing.jpg/512px-France_in_XXI_Century._Electric_scrubbing.jpg"/></a></p>

<p>Eine kleine Sammlung an Links:</p>

<ul>
<li><a href="https://www.youtube.com/watch?feature=player_embedded&amp;v=qb7DN3kpl2o">Durex bringt Arduino-basierte Internet-Unterwäsche
heraus.</a><br/>Laut Promo-Video wohl für Hetero-Paare. Vielleicht ist das aber auch die normative Matrix.</li>
<li><a href="http://www.newsoficeland.com/home/technology/innovation/item/1124-new-app-prevents-icelanders-from-sleeping-with-their-relatives">Isländerinnen und Isländer können per App checken, ob sie allzu eng
verwandt sind, bevor sich mehr
entwickelt</a> <br/><em>Three engineers made an app for the &#8216;Íslendingabók&#8217; database. People can now easily, and on the go, look up how they are related to other Icelanders. And a precious feature, using the bump technology, allows people that meet to just bump their phones together, to instantly see if they are too related to take things any further. The engineers&#8217; slogan for this feature was: &#8220;Bump the app before you bump in bed&#8221;.</em></li>
<li><a href="http://io9.com/you-ll-probably-never-upload-your-mind-into-a-computer-474941498">Garant für schlechte Stimmung bei der transhumanistischen Bewegung: &#8220;You’ll Probably Never Upload Your Mind Into A Computer&#8221;</a><br/><em>To be fair, however, there are a number of genuine scientific, philosophical, ethical, and even security concerns that could significantly limit or even prevent consciousness uploads from ever happening.</em></li>
<li><a href="http://derstandard.at/1363708039372/Betrachten-von-Tierfotos-steigert-die-Produktivitaet">Betrachten von Tierfotos steigert die
Produktivität</a><br/><em>&#8220;Niedliches löst positive Emotionen aus, wir wollen diesen Dingen näher kommen, achten mehr auf Details&#8221;, sagt Nittono im Interview mit der &#8220;Zeit&#8221;. Alleine durch das Betrachten entstehe ein Zustand fokussierter Aufmerksamkeit, der über das Anschauen selbst hinausgeht, so der Forscher. Die Erklärung dafür heißt &#8220;kawaii&#8221;, was in Japan so viel wie die Kraft des Niedlichen bedeutet.</em></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python und die Liebe]]></title>
    <link href="http://blog.johl.io/blog/2013/04/01/python-und-die-liebe/"/>
    <updated>2013-04-01T00:53:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/04/01/python-und-die-liebe</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Python on love:</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">this</span>
</span><span class='line'><span class="n">love</span> <span class="o">=</span> <span class="n">this</span>
</span><span class='line'><span class="n">this</span> <span class="ow">is</span> <span class="n">love</span><span class="p">,</span> <span class="n">love</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">True</span> <span class="ow">or</span> <span class="bp">False</span><span class="p">,</span> <span class="n">love</span> <span class="ow">is</span> <span class="n">love</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="p">(</span><span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Was mag es sein?]]></title>
    <link href="http://blog.johl.io/blog/2013/03/31/was-mag-es-sein%3F/"/>
    <updated>2013-03-31T22:23:00+02:00</updated>
    <id>http://blog.johl.io/blog/2013/03/31/was-mag-es-sein?</id>
    <content type="html"><![CDATA[<div><script src='https://gist.github.com/5281890.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plötzlich Semikolon — Automatic Semicolon Insertion]]></title>
    <link href="http://blog.johl.io/blog/2013/03/29/semikolon/"/>
    <updated>2013-03-29T21:01:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/03/29/semikolon</id>
    <content type="html"><![CDATA[<p>Für ein Buch, an dem ich gerade arbeite, war der folgende Text zu lang und zu ausführlich. Wegwerfen wollte ich ihn aber nicht, so dass er hier im Blog landete, in dem schon lange nichts mehr aus dem Bereich Programmieren vorkam.</p>

<h2>JavaScript und Semikolons</h2>

<p>Das automatische Einfügen von Semikolons (<em>Automatic Semicolon Insertion</em>, ASI) ist eine der verwirrendsten und umstrittensten Eigenschaften von JavaScript. Die Regeln für das Einfügen von Semikolons beginnen im <a href="http://ecma-international.org/ecma-262/5.1/">Sprachstandard ECMA 262</a> recht simpel: Wenn ein gültiges JavaScript-Statement von einem anderen gültigen JavaScript-Statement durch einen Zeilenumbruch (<em>linefeed</em>) oder das Zeichen &#8221;<code>}</code>&#8221; getrennt wird, dann wird ein Semikolon vor dem Trennzeichen eingesetzt. Am Ende einer Zeile oder eines Blocks können Semikolons also normalerweise weggelassen werden.</p>

<p>Ein Semikolon kann zudem am Ende eines Programms weggelassen werden. Es muss also nicht als letztes Zeichen in der Datei stehen. Dies sind schon alle einfacheren Bedingungen für ASI.  Es gilt zudem die Regel, dass ein Semikolon niemals automatisch eingefügt wird (und damit auch nicht weggelassen werden kann), wenn dadurch ein leeres Statement zustande käme. Auch in der Klammer mit den Bedingungen einer <code>for</code>-Schleife wird niemals automatisch ein Semikolon ergänzt.</p>

<p>Die Postfix-Ausdrücke <code>++</code> und <code>--</code> und die Befehle <code>continue</code>, <code>break</code>, <code>return</code> und <code>throw</code> haben ihre eigenen Regeln.  Wenn <code>++</code> oder <code>--</code> als Postfix-Operator geparst werden können und sie vom vorhergehenden Zeichen durch einen Zeilenumbruch getrennt werden, dann fügt JavaScript vor ihnen ein Semikolon ein.</p>

<p>  <code>a = b</code><br/>
  <code>++c</code></p>

<p>wird also zu:</p>

<p>  <code>a = b;</code><br/>
  <code>++c;</code></p>

<p>Wenn bei continue, break, return und throw das nächste Zeichen erst nach einem Zeilenumbruch folgt, dann fügt JavaScript nach diesen Befehlen ein Semikolon ein.</p>

<p>  <code>return</code><br/>
  <code>a + b</code></p>

<p>wird demnach zu:</p>

<p>  <code>return;</code><br/>
  <code>a + b;</code></p>

<p>Rund um die ASI ist ein geradezu religiöser Streit in der JavaScript-Community entstanden. Ursprünglich dachte Brendan Eich, dass sich mit ASI die Anzahl der Fehler beim Parsen von Programmcode verringern lassen — JavaScript war schließlich für weniger versierte Programmiererinnen und Programmierer gedacht. Douglas Crockford, Autor des wahrscheinlich meistgelesenen JavaScript Stil-Handbuchs <a href="http://www.oreilly.de/catalog/9780596517748/">&#8220;JavaScript: The Good Parts&#8221;</a> und einflussreicher Entwickler von Technologien wie JSON (JavaScript Object Notation, also der Serialisierung von Daten in JavaScript), empfiehlt, ASI vollständig zu missachten und jedes Statement einfach mit einem Semikolon abzuschließen, ohne auf die eingebaute Magie des Parsers zu vertrauen.</p>

<p>Demgegenüber steht das meist beobachtete Projekt auf Github, das Framework <a href="https://github.com/twitter/bootstrap">Twitter Bootstrap</a>, das in seinem JavaScript-Code völlig auf Semikolons verzichtet. Crockford kommentierte das renommierte Bootstrap-Projekt in Hinblick auf seinen JavaScript-Komprimierer JSMin drastisch: &#8221;<em>That is insanely stupid code.  I am not going to dumb down JSMin for this case. (&#8230;) Learn to use semicolons properly. ! is not intended to be a statement separator. ; is.</em>&#8221;&#8221;</p>

<p>Woraufhin der Bootstrap-Entwickler Jacob Thornton antwortete:
&#8221;<em>I have learned to use them, that’s why there isn’t one present.</em>&#8221;</p>

<p>Aus praktischen Gründen empfiehlt es sich, sich hauptsächlich an Crockford zu halten. Allerdings
sollten wir zur
Kenntnis nehmen, dass es auch andere religiöse Ansichten zu Semikolons gibt,
die wir zu respektieren haben.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Die Spam-Bibliothek von Babel]]></title>
    <link href="http://blog.johl.io/blog/2013/03/16/monkey-typewriter-amazon/"/>
    <updated>2013-03-16T21:49:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/03/16/monkey-typewriter-amazon</id>
    <content type="html"><![CDATA[<p><a href="https://de.wikipedia.org/wiki/Infinite-Monkey-Theorem">Das Infinite-Monkey-Theorem, auch deutsch Theorem der endlos tippenden Affen, besagt, dass ein Affe, der unendlich lange zufällig auf einer Schreibmaschine herumtippt, fast sicher irgendwann alle Bücher in der Bibliothèque nationale de France, der Nationalbibliothek Frankreichs, schreiben wird. In englischsprachigen Ländern heißt es, dass so irgendwann die Werke William Shakespeares entstehen werden.</a></p>

<p>Der Kindle-Store von Amazon wird derzeit von einer Menge an seltsamen Büchern überschwemmt. Eins der Werke, die dort angeboten werden, beinhaltet <a href="https://en.wikipedia.org/wiki/The_Song_That_Never_Ends">den Liedtext des Nerv-Klassikers &#8220;The Song That Never Ends&#8221;</a>, immer wieder wiederholt <a href="http://www.publishingtrends.com/2011/03/the-kindle-swindle/">auf über 700 Seiten</a>, andere Titel <a href="http://tech.fortune.cnn.com/2012/04/16/amazon-knock-off-bestsellers/">sind Bestsellern zum Verwechseln ähnlich</a>. E-Books und textgenerierende Algorithmen machen es möglich.</p>

<p><img class="left" src="https://upload.wikimedia.org/wikipedia/commons/f/f4/Typing_monkey.svg">
Hier sind zwei Fragen für juristisch interessierte Futurologen: Wenn on Demand von einer unendlichen Anzahl von Affen (oder Algorithmen) jeder beliebige Text, jede mögliche Buchstabenkombination verlegt und bei Amazon verkauft werden kann, wer bekommt dann die Einkünfte aus dem Leistungsschutzrecht für automatisch generierte Texte? Und: Wenn mit einer gewissen Wahrscheinlichkeit irgendwann der Affe/Algorithmus &#8220;Mein Kampf&#8221; generiert und bei Amazon zum Verkauf anbietet, macht sich der Affe/Algorithmus dann strafbar? Schirrmacher, hilf!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leichter Neid zum Berlin Geekettes Hackathon]]></title>
    <link href="http://blog.johl.io/blog/2013/03/03/bghackathon/"/>
    <updated>2013-03-03T19:39:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/03/03/bghackathon</id>
    <content type="html"><![CDATA[<p>Ich habe heute kurz zum Abschluß, wo auch Gäste zugelassen waren, ein paar Präsentationen von Projekten angesehen, die über das Wochenende beim <a href="http://berlingeekettes.github.com/hackathon/">Berlin Geekettes Hackathon</a> entstanden sind. Ich bin geflasht und beeindruckt. Es gab einen morsenden Mini-Hubschrauber, eine E-Book-Leseapp für Hörbücher, Gürtelschnallen zum Tetris-Spielen, einen Wecker, der bei jedem mißlungenen Versuch ihn abzustellen immer schlechtere Musik spielte, eine App die ausgehend von Etsy-Einkäufen Immobilien vorschlägt und vieles mehr, was in ca. 24 Stunden entstanden ist.</p>

<p>Deutschlands (wahrscheinlich) erster Women-Only-Hackathon, den die <a href="http://berlingeekettes.com/">Berlin Geekettes</a> organisiert wurde, schien für all die kreativen Hackerinnen dort <a href="http://bghackathon.tumblr.com/">ein großer Spaß</a> gewesen zu sein. Ich war auf eine sehr schöne Art und Weise neidisch darauf, einfach mal nicht gemeint zu sein, wenn es um den kreativen Umgang mit Technik geht. Ich wünsche mir mehr Momente dieses Neids. Irgendwann in ferner Zukunft könnte es dann auch auch mal sein, dass so ein Neid nicht mehr nötig ist. <a href="http://www.youtube.com/watch?v=wKu7RxpOo2Y">Aber das ist ein Märchen von Übermorgen</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TPB AFK]]></title>
    <link href="http://blog.johl.io/blog/2013/02/09/tpb-afk/"/>
    <updated>2013-02-09T15:05:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/02/09/tpb-afk</id>
    <content type="html"><![CDATA[<blockquote><p>TPB AFK: The Pirate Bay Away From Keyboard is a documentary film released on February 8 2013, directed by Simon Klose, based on the lives of the three founders of The Pirate Bay - Peter Sunde, Fredrik Neij and Gottfrid Svartholm.</p><footer><strong>Wikipedia, TPB AFK</strong><cite><a href='http://en.wikipedia.org/wiki/TPB_AFK'>en.wikipedia.org/wiki/TPB_AFK/&hellip;</a></cite></footer></blockquote>


<p><a href="http://thepiratebay.se/search/tpb.afk/0/99/0">Viel mehr gibt es nicht zu sagen. Seht selbst.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geheim und sicher wählen im Internet?]]></title>
    <link href="http://blog.johl.io/blog/2013/02/07/commitcoin/"/>
    <updated>2013-02-07T23:40:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/02/07/commitcoin</id>
    <content type="html"><![CDATA[<p>Ich habe ein Verständnisproblem und hoffe ganz ernsthaft, ihr könnt mir helfen. Geheime, sichere und nicht manipulierbare Wahlen über das Internet sind nicht möglich, soweit mein bisheriger Kenntnisstand. Schon Wahlen auf Papier sind manipulierbar, wenn ein Computer ins Spiel kommt, der beliebig programmiert werden kann, skaliert die Manipulierbarkeit ins Unendliche. Das ist letztendlich auch der Hintergrund für das <a href="http://wahlcomputer.ccc.de/rechtliches/urteil-wahlcomputer/">Urteil des Bundesverfassungsgerichts am 3. März 2009</a>, dass der Einsatz von Wahlcomputern bei der Bundestagswahl 2005 verfassungswidrig war, da der Wähler weder die abgegebenen Stimmen noch deren Auszählung selbst kontrollieren konnte. Der Chaos Computer Club hat sich um die Ächtung von Wahlcomputern in den letzten Jahren <a href="http://wahlcomputer.ccc.de/">verdient gemacht</a>.</p>

<p>Bis ins Jahr 1997 existierte an der Universität Göttingen der <a href="http://de.wikipedia.org/wiki/Wolfskehl-Preis">Wolfskehl-Preis</a>, der für den Beweis des <a href="http://de.wikipedia.org/wiki/Gro%C3%9Fer_Fermatscher_Satz">großen Fermatschen Satzes</a> ausgelobt war. Am Göttinger Mathematischen Institut waren fast 90 Jahre (1908-1997) lang ein oder zwei Assistenten mit der Bearbeitung von Einsendungen beschäftigt, die von Unmengen von Amateuren eingeschickt wurden. Meist reichte ein einfacher Formbrief als Antwort, in dem nur eingetragen werden musste, auf welcher Seite und in welcher Zeile sich der erste logische Fehler im &#8220;Beweis&#8221; befand.</p>

<p>Wenn jetzt ein Paper behauptet, das Problem geheimer und sicherer,
manipulationsresistenter Wahlen per Computer gelöst zu haben, ist
Skepsis angebracht. Deshalb meine Frage: Wo in diesem Paper befindet
sich der erste logische Fehler?</p>

<p><a href="http://people.scs.carleton.ca/~clark/projects/commitcoin/">CommitCoin: Carbon Dating Commitments with Bitcoin</a></p>

<blockquote><p>Can you have both secret ballots and verifiable results?</p><p>Yes. Crypto can do seemingly impossible things. One of those things is<br/>having a voting system where ballot is anonymous (you can&#8217;t prove how<br/>you voted) and yet you can make sure that your ballot is included<br/>unmodified in the final tally! Crypto voting systems are often called<br/>E2E or end-to-end verifiable. Scantegrity is one, there are others.<br/>Scantegrity is the only one that has been used in an actual governmental<br/>election (two municipal elections in Takoma Park, Maryland, USA).</p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oh! Onigiri]]></title>
    <link href="http://blog.johl.io/blog/2013/02/06/onigiri/"/>
    <updated>2013-02-06T04:22:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/02/06/onigiri</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://upload.wikimedia.org/wikipedia/commons/1/1c/Salmon_onigiri_by_yomi955.jpg" width="450" title="'By yomi955 (Flickr) CC-BY-2.0 via Wikimedia Commons'" >
Es besteht die Möglichkeit, dass ich mich für den nächsten Hype entschuldigen muss, wenn die Zeit gekommen ist. Die Tatsache, dass ich Bubble Tea vor einer gefühlten Ewigkeit (ca. letzter Sommer) noch abfeierte, weil es ihn endlich häufiger so zu kaufen gab, wie ich ihn aus New Yorks Chinatown kannte und liebte, lastet immer noch ein bisschen auf mir und mein Enthusiasmus tut mir leid. Ich bin voll in die Hipster-Falle getappt, plötzlich wurden die Innenstädte von Bubble Tea überschwemmt, Läden machten auf und gingen kurz danach ein und am Schluß gab es überzuckerten Schlabber mit Perlen sogar bei McDonald&#8217;s — of all places. Bitte verzeiht mir.</p>

<p><img class="left" src="http://upload.wikimedia.org/wikipedia/commons/d/d7/Rice_balls_of_Seven-Eleven.jpg" width="300" title="'By Corpse Reviver (Own work) GFDL or CC-BY-SA-3.0 via Wikimedia Commons'" >
Jetzt also Onigiri. Japanische Reisbällchen, oft in Dreiecksform, gefüllt mit Sachen (Lachs oder Hühnchen oder Sesam und Gemüse), bisweilen umhüllt von einem Algenblatt: Das bessere Butterbrot, ab zwei oder drei Stück erstaunlich sättigend, was wohl am Reis liegt. In Japan sind Onigiri viel verbreiteter als alles, was wir hier an japanischem Essen zu kaufen bekommen: Oft daheim zubereitet werden sie zur Arbeit mitgebracht, im Supermarkt werden sie in langen Reihen im Kühlregal fertig angeboten. Aus Korea kenne ich sie als Chumokbap (추믁밥), was &#8220;Faust-Reis&#8221; heisst. Ich mag Onigiri und ich habe mich gefreut, als ich nur kurze Zeit hintereinander zwei Möglichkeiten in Berlin entdeckt habe, um mir den Bauch mit ihnen vollzuschlagen.</p>

<p>Da gibt es zunächst am <a href="http://de.wikipedia.org/wiki/U-Bahnhof_Sch%C3%B6nleinstra%C3%9Fe">U-Bahnhof Schönleinstraße</a> den Onigiri-Stand <a href="http://rice-up.de/">Rice Up</a>, den ich deshalb als ersten erwähne, weil er jeden Morgen auch ein potenzielles Anlaufziel auf dem Weg zur Arbeit für mich darstellt. Schön Bio alles, etwas kleine (und dafür teure) Portionen, aber durchaus gut: Jeden Tag vegane Onigiri und welche mit Fleisch oder Fisch (Lachs mit scharfer Pflaume ist ein prima Frühstück). Natürlich ist der Stand gut zu erreichen, weil er ja genau auf dem Bahnsteig liegt, aber insgesamt gehen bei dem Angebot schon leichte Hipster-Alarmglocken los. Sei&#8217;s drum. Es schmeckt.</p>

<p>Dann gibt es die unglaublich nette Natsuko, die mit ihrem <a href="http://samuraisnack.com/">Samurai Snack</a> eine lustige Idee verfolgt: Zur Mittagszeit liefert sie an Büros (hauptsächlich Start-Ups, wenn ich das richtig verstanden habe). Wenn sie beladen mit ihren Onigiri, die man tags zuvor über ein Formular per Mail bestellt, in unserem Büro auftaucht, pünktlich um 11:30 Uhr, ist die Freude groß. Statt irgendwelchem Fast-Food-Quatsch einfach mal Onigiri in der Mittagspause, da gibt es eigentlich keine Gegenargumente, zumal ihre Onigiri nur die Hälfte von denen an der Schönleinstraße kosten, dafür aber größer und viel leckerer sind. Die ersten Male gibt es die Onigiri sogar kostenlos, wenn man ihr Feedback und Kommentare gibt. Natsuko holt sich Rezepte für Onigiri regelmäßig bei ihrer Mutter in Japan ab und ich finde man schmeckt die Mühe, die sie in ihr kleines Unternehmen steckt.</p>

<p>In einer Stadt mit gleich zwei Onigiri-Optionen zu leben ist irgendwie auch Luxus ausserhalb Ostasiens. Hoffen wir mal, dass der Hypezirkel bis zum Absturz in die Peinlichkeit diesmal nicht ganz so rasant verläuft wie bei Bubble Tea.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Das Netz als röchelndes, gurgelndes, pfeifendes Wesen]]></title>
    <link href="http://blog.johl.io/blog/2013/01/31/modemklang/"/>
    <updated>2013-01-31T11:26:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/01/31/modemklang</id>
    <content type="html"><![CDATA[<p><a href="http://windytan.blogspot.fi/2012/11/the-sound-of-dialup-pictured.html" title="The sound of the dialup, pictured"> <img src="http://1.bp.blogspot.com/-ocE3ypOxO_c/UKf6aOz38lI/AAAAAAAAAn0/lwAZYB11ztY/s400/dialup-final.png"> </a></p>

<blockquote><p>Kennen Sie das taoistische Märchen von der Zähmung der Harfe?</p><p>Vor langer, langer Zeit stand in der Schlucht von Lungmen ein Kiri-Baum, ein wahrhafter König des Waldes.  Er reckte seine Krone so hoch, daß er mit den Wolken sprechen konnte; seine Wurzeln reichten tief in die Erde, wo ihre bronzefarbenen Locken sich mit denen des silbernen Drachens vermischten, der darunter schlief. Eines Tages geschah es, daß ein mächtiger Zauberer aus diesem Baum eine wundersame Harfe fertigte, deren widerstrebender Geist nur vom größten aller Musiker gezähmt werden konnte.  Lange Zeit befand sich das Instrument im Besitz des Kaisers von China, aber alle Bemühungen, seinen Saiten eine Melodie zu entlocken, waren vergebens. Selbst wenn man sich noch so sehr mühte - aus der Harfe erklangen nur harte, verächtliche Töne, die nicht zu den Liedern paßten, die die Musiker gerne gesungen hätten. Die Harfe wollte keinen von ihnen als ihren Meister anerkennen.</p><p>Zuletzt kam Pei-ya, der Prinz unter den Harfespielern.  Er strich mit zarter Hand über die Harfe, wie jemand, der ein widerspenstiges Pferd besänftigen will und berührte sachte die Saiten. Er sang von der Natur und den Jahreszeiten, von den hohen Bergen und fließenden Wassern. Und siehe da - alle Erinnerungen des Baumes erwachten! Noch einmal spürte der Baum den süßten Atem des Frühlings in seinen Ästen. Die frischen Wasserfälle, die die Schlucht hinuntersprangen, lachten den knospenden Blumen zu. Alsbald hörte man die träumenden Stimmen des Sommers mit seinen Myriaden von Insekten, dem sanften Plätschern des Regens, dem Wehklagen Ein Tiger brüllt - im Tal hallt sein Schrei wider. Es ist Herbst, in der Verlassenheit der Nacht scheint der Mond scharf wie eine Schwert auf das bereifte Gras. Nun herrscht Winter, und durch die schneeige Luft wirbeln Scharen von Schwänen und auf die Zweige prasseln Hagelkörner mit grimmigem Vergnügen.</p><p>Dann wechselte Pei-ya die Tonart und sang von der Liebe.</p><p>Der Wald wiegte sich wie ein entflammter Liebhaber, tief in Gedanken verloren. Hoch oben zog eine hell leuchtende Wolke vorüber, stolz wie ein hochmütiges Mädchen; indem sie weiterzog, warf sie lange Schatten auf den Boden, schwarz wie die Verzeiflung.  Wiederum wechselte die Tonart: Pei-ya sang vom Krieg, von klirrendem Stahl und stampfenden Streitrössern.Und in der Harfe erwuchs der der Sturm der Lungmen, der Drachen ritt auf dem Blitz, die Lawine brach grollend durch die Hügel.</p><p>Von Begeisterung erfüllt, fragte der chinesiche Kaiser Pei-ya, worin das Geheimnis seines Sieges liege.  &#8220;Herr&#8221;, antwortete dieser, andere haben versagt, weil sie nur von sich selbst gesunden haben. Ich überließ es der Harfe, das Thema zu wählen und ich wußte nicht mehr genau, ob die Harfe Pei-ya war oder Pei-ya die Harfe.&#8221;</p><footer><strong>Kakuzo Okakura</strong><cite></cite></footer></blockquote>


<iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=http%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F77099391"></iframe>


<p>Das Netz der 1980er und 1990er war ein Klangkörper, ein Instrument, auf dem gespielt wurde — oder das eben mit den Benutzer_innen spielte. Wer ins Netz wollte, hörte Klänge: Pfeifen und Zischen, Modulationen und Demodulationen. Mit dem Aufkommen von Highspeed-Internetverbindungen wie DSL oder Kabel wurde das Netz stumm und hatte keinen eigenen Klang mehr. Gleichzeitig füllte es sich mit Menschen und ihren sozialen Verknüpfungen und wurde ein völlig anderes Wesen: weniger technisch, aber auch sinnlich weniger greifbar.</p>

<p>Das technische Wissen über <a href="http://de.wikipedia.org/wiki/AT-Befehlssatz">AT-Befehle</a> und <a href="http://de.wikipedia.org/wiki/XModem">Datenübertragungsprotokolle</a>, das notwendig war, um iüberhaupt eine Verbindung herzustellen, hatte zur Folge, dass das, was damals an Netzwerken existierte, in weiten Teilen ein Tummelplatz für Geeks und Technikenthusiasten war. Die Tatsache, dass die Bundespost mit ihrem Staatsmonopol <a href="http://www.schrutzki.net/texte/eigene/ds/postbesuch.php3?sid=510a5677dcba1">den Einsatz von leistungsfähigen Modems verbot oder erschwerte</a> machte das Datenreisen fast zu einer halblegalen Angelegenheit — auf den Betrieb eines Modems ohne ZZF-Prüfsiegel stand zumindest theoretisch eine Haftstrafe von fünf Jahren, was diese Straftat in die gleiche Liga brachte wie das <a href="http://dejure.org/gesetze/StGB/307.html">Herbeiführen einer Explosion durch Kernenergie</a>.</p>

<p>Beim Aufbau des <a href="http://www.foebud.org/fruehere-projekte/zamir">Zamir Transnational Network</a> war das Wissen über Modems notwendig für die Herstellung von Datenverbindungen im kriegsgeschüttelten zerfallenden Jugoslawien. Die Qualität der Telefonleitungen war so schlecht, dass Billigmodems aufgaben, nur die teureren Geräte (die Herstellernamen &#8220;ZyXel&#8221; und &#8220;US Robotics&#8221; wurden erfurchtsvoll geraunt) waren den Störgeräuschen auf der Leitung gewachsen. Wenn abgehoben wurde, konnte es möglicherweise minutenlang dauern, bis ein Freizeichen (postdeutsch: &#8220;Amt&#8221;) zu hören war — das bedeutete im Modemwählstring eine schier unendliche Anzahl von Kommata, was im AT-Befehlssatz für &#8220;bitte warten&#8221; stand. Stille war gleich Verhinderung von Kommunikation, ein Ausnahmezustand, mit dem das Modem umgehen musste. Erst wenn es quietschte und kratzte, konnten Daten reisen, anders als im schweigenden DSL von heute.</p>

<p>Das Netz-Instrument, das wir heute spielen, ist abstrakter: Gesellschaft, Gedanken, Ideen, Beziehungen. Es ist mächtiger, aber stiller geworden.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Strukturierte Debatten im Internet]]></title>
    <link href="http://blog.johl.io/blog/2013/01/19/debattenkultur/"/>
    <updated>2013-01-19T15:08:00+01:00</updated>
    <id>http://blog.johl.io/blog/2013/01/19/debattenkultur</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://blog.johl.io//upload.wikimedia.org/wikipedia/commons/8/8a/Jakobinerklub.jpg" width="512" title="Jakobinerklub. Stich nach einer Zeichnung von Vilette (Bibliothèque 11 nationale de France, Paris)..DaQuirin at de.wikipedia [Public domain], 12 from Wikimedia Commons" >
<a href="http://blog.lqfb.piratenpartei.de/2013/01/17/testbetrieb-neue-api-und-bombay-crushed/">Inspiriert von der alternativen Oberfläche zu LiquidFeedback, der gerade im Testbetrieb gestarteten &#8220;Saftigen Kumquat&#8221;</a>, habe ich mich auf die Suche nach einem Tool für eine Leerstelle bei der Meinungsbildung über LiquidDemocracy gemacht.</p>

<p>Meines Erachtens fehlt dem sehr ausgeklügelten Delegations- und Wahlsystem für Vorschläge ein entsprechend strukturierendes Element für die Debattenphase, bei der Argumente pro und contra abgewogen und eingebracht werden können. Die jetztigen Mechanismen zum Einbringen von Änderungsvorschlägen oder Gegeninitiativen sind nicht immer für eine schrittweise Verbesserung des Textes geeignet und ein gern genommener Work-Around, nämlich ein einfacher Link auf ein EtherPad zur Initiative, kann nur bei Selbstdisziplin der Teilnehmer_innen als Tool für eine strukturierte Debatte fungieren.</p>

<p>Da ich dieses Blog auch gerne mal für unfertige Gedanken und Work in Progress benutze spricht nichts gegen eine Liste von Tools, oder?</p>

<ul>
<li><a href="http://de.wikiarguments.net/">Wikiarguments</a> strukturiert die Debatte so: Jede These kann beliebig viele Pro- und Contra-Argumente bekommen.  Diese können hoch- und runtergevotet werden. Ich hätte eine <a href="http://www.mediawiki.org/wiki/Manual:Extensions">Mediawiki-Extension</a> erwartet, aber Wikiargument scheint selbstgestrickter PHP-Code zu sein, der mich auf den ersten Blick nicht überzeugte.</li>
<li>Wenn man dem Motto <a href="http://de.wikipedia.org/wiki/Code_and_Other_Laws_of_Cyberspace">&#8220;Code is Law&#8221;</a> folgt, dann ist das Schaffen von Gesetzen gleichzusetzen mit Codieren. Und das macht die Debatte vor dem Beschluss wiederum zum Code-Review. Warum also nicht gleich ein etabliertes Werkzeug zum interlinearen Code Review benutzen, um einen Initiativentext zu annotieren und zu zerpflücken? Etwa so: <iframe src="http://player.vimeo.com/video/20084957" width="500" height="375" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></li>
<li>Reddit hat sich als Debattentool bewährt, ist als gut verständliche Python-Applikation <a href="https://github.com/reddit">Open Source verfügbar</a> und bietet quasi die Luxus-Variante von dem, was Wikiarguments macht: Hoch- und runtervoten, verschiedene Unterbereiche, Diskussionsfäden etc. Was spricht eigentlich dagegen, es zu benutzen?</li>
</ul>


<p>Gibt es noch mehr Ideen und Anregungen? Bitte kommentiert!</p>
]]></content>
  </entry>
  
</feed>
