<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hackety hack hack]]></title>
  <link href="http://blog.johl.io/atom.xml" rel="self"/>
  <link href="http://blog.johl.io/"/>
  <updated>2017-02-03T11:08:55+01:00</updated>
  <id>http://blog.johl.io/</id>
  <author>
    <name><![CDATA[Jens Ohlig]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Der Dash-Button: Keine gute Idee]]></title>
    <link href="http://blog.johl.io/blog/2017/02/03/dash-button/"/>
    <updated>2017-02-03T10:15:00+01:00</updated>
    <id>http://blog.johl.io/blog/2017/02/03/dash-button</id>
    <content type="html"><![CDATA[<p>Seit Dezember betreibe ich ein kleines Experiment am Arbeitsplatz. Mit einem <a href="https://en.wikipedia.org/wiki/Amazon_Dash">Amazon Dash-Button</a> und einem Raspberry PI habe ich eine kleine Installation angebracht, denn Wertschätzung ist wichtig: ein Button, der auf Knopfdruck zufällige Komplimente per Mail an eine zufällige Kollegin oder einen zufälligen Kollegen verschickt.</p>

<p>Drückt jemand auf den WLAN-getriebenen Internet-of-Things-Button bekommt irgendjemand im Büro ein Kompliment per Mail.</p>

<p>Gezielte Komplimente können natürlich auch weiterhin persönlich und analog überbracht werden, aber digital ist besser.</p>

<p>Grundlage des Projekts ist <a href="https://github.com/maddox/dasher">dasher</a>.</p>

<p><img src="https://d17oy1vhnax1f7.cloudfront.net/items/15271l3y0L2Q01282i3B/Someone_pressed_the_compliment_button__Here_is_a_compliment_for_you__-_Posteingang_-_jens_ohlig_wikimedia_de.png?v=26cf69cc" alt="Screenshot Kompliment" /></p>

<p>Es gibt auch <a href="https://www.instagram.com/p/BOAflZigy3U/">eine Aufnahme von einem der ersten Knopfdrücke</a>.</p>

<p>Leider hat sich der Amazon Dash Button als nicht besonders gut für das Experiment herausgestellt: <a href="https://thenextweb.com/gadgets/2016/05/16/dash-elsewhere/">Nach einer geringen 3-stelligen Anzahl von Knopfdrücken stellt dieser den Betrieb ein.</a> Wenn wir jetzt jedes Mal den Button neu kaufen, würde uns das ca. 4ct pro Kompliment kosten. Das ist es uns natürlich Wert, aber wir sollten auch an die Umwelt denken.</p>

<p>Im Moment arbeiten wir an einem Ersatz auf der Basis von <a href="https://en.wikipedia.org/wiki/NodeMCU">NodeMCU</a>. Sobald diese Lösung fertig ist gibt es auch das gesamte Projekt unter einer freien Lizenz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bemerkenswerte Datensätze]]></title>
    <link href="http://blog.johl.io/blog/2016/06/18/datasets/"/>
    <updated>2016-06-18T23:32:00+02:00</updated>
    <id>http://blog.johl.io/blog/2016/06/18/datasets</id>
    <content type="html"><![CDATA[<p>Wer Dinge mit Daten veranstalten möchte, braucht Datensätze. Das Netz ist voll mit Datensätze, auch solche mit <a href="https://motherboard.vice.com/read/70000-okcupid-users-just-had-their-data-published">zweifelhafter Ethik</a>.</p>

<p>Hier sind ein paar interessante, die mir aufgefallen sind:</p>

<ul>
<li><a href="https://github.com/pffy/data-sriracha-bottle-chinese-characters">Sriracha Bottle Chinese Characters</a> <em>Free and open source data set of Chinese characters on the (Huy Fong Foods) sriracha sauce bottle.</em></li>
<li><a href="https://openbeerdb.com/">Open Beer Database</a></li>
<li><a href="https://datahub.io/dataset/data-incubator-pokedex">Pokedex data in RDF</a> <em>Linked data on all Pokemon in the Pokedex</em></li>
<li><a href="http://data.opendatasoft.com/explore/dataset/open-data-sources@public/">Open Data Inception</a> <em>A list of Open Data portals around the world</em></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Orte, die mit 'ow' oder 'itz' enden]]></title>
    <link href="http://blog.johl.io/blog/2016/05/28/orte/"/>
    <updated>2016-05-28T20:43:00+02:00</updated>
    <id>http://blog.johl.io/blog/2016/05/28/orte</id>
    <content type="html"><![CDATA[<p>Ich hatte eine Hypothese, auf die ich durch ein Lied gebracht wurde: Orte, die mit &#8220;ow&#8221; oder &#8220;itz&#8221; enden, befinden sich mehrheitlich nicht in Westdeutschland (aka die alten Bundesländer).</p>

<p>Schön, dass sich diese Hypothese mit Wikidata überprüfen lässt:</p>

<script src="https://gist.github.com/johl/4a75166ff0afe95d25ad60f9ea071e84.js"></script>


<p><a href="http://tinyurl.com/h9umdfp">Hier lässt es sich ausprobieren</a></p>

<p><img src="https://s3.amazonaws.com/f.cl.ly/items/350w0q0A1z1j2K032B1j/Wikidata_Query_Service__Beta_.png?v=3df90ebd" alt="Ergebnis der Query" style="width: 320px;" align="left"/>
Ich muss sagen, das Ergebnis erstaunt mich. Es gibt ein paar Ausrutscher, aber das Cluster der Punkte bildet ziemlich genau die Umrisse der ehemaligen DDR. In dieser Deutlichkeit hatte ich nicht erwartet, dass die Hypothese belegt wird. Woher kommt es?</p>

<blockquote><p>Die Namen auf -ow finden sich vor allem in Nordostdeutschland, wo Ortsnamen slawischer Herkunft häufig sind. Mithin in Mecklenburg, Vorpommern, weiten Teilen Brandenburgs (in der Lausitz seltener), dem Norden und Osten der Altmark, dem Wendland und Teilen des Herzogtums Lauenburg. Auch unter den deutschen Namen von Orten im Osten von Pommern und im Osten von Brandenburg, die heute in Polen liegen, finden sich solche auf -ow. Dagegen sind in Gegenden wie Sachsen oder Teilen von Österreich, wo es eine Reihe von Ortsnamen slawischer Herkunft gibt, keine auf -ow zu finden.</p><footer><strong>Wikipedia</strong><cite><a href='https://de.wikipedia.org/wiki/-ow'>de.wikipedia.org/wiki/-ow/&hellip;</a></cite></footer></blockquote>


<p>Ebenso slawischen Ursprungs und in Ostdeutschland verbreitet ist <a href="https://de.wikipedia.org/wiki/-itz">die Endung -itz</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gotta catch 'em all if they are prime]]></title>
    <link href="http://blog.johl.io/blog/2016/05/22/pokemon-prime/"/>
    <updated>2016-05-22T03:48:31+02:00</updated>
    <id>http://blog.johl.io/blog/2016/05/22/pokemon-prime</id>
    <content type="html"><![CDATA[<p><a title="By Jarekt (Own work) [CC BY-SA 4.0
(http://creativecommons.org/licenses/by-sa/4.0)], via Wikimedia Commons"
href="https://commons.wikimedia.org/wiki/File%3APokemon_collection.jpg"><img
width="512" align="left" alt="Pokemon collection"
src="https://upload.wikimedia.org/wikipedia/commons/c/c1/Pokemon_collection.jpg"/></a></p>

<p><em><a href="http://blog.johl.io//en.wikipedia.org/wiki/Pok%C3%A9mon" class="extiw" title="en:Pokémon">Pokémon</a></em>, as Wikipedia tells us, <em> is a multi-billion dollar media franchise controlled by video game giant <a href="http://blog.johl.io/wiki/Nintendo" title="Nintendo">Nintendo</a>, and created by <a href="http://blog.johl.io//en.wikipedia.org/wiki/Satoshi_Tajiri" class="extiw" title="en:Satoshi Tajiri">Satoshi Tajiri</a> around 1995</em>. Interestingly enough, Pokémon has had quite an impact on the Wikipedia project, with the completeness of Pokémon characters resulting in the <a href="https://en.wikipedia.org/wiki/Wikipedia:Pok%C3%A9mon_test">Pokémon test</a>, so named after editors used similar arguments to try to “keep” other articles—if [named Pokemon character] has an article, why shouldn’t this topic? For example, in arguing against the deletion of an article in 2005, one editor <a href="https://en.wikipedia.org/wiki/Wikipedia:Articles_for_deletion/Nicholas_J._Hopper">wrote</a> &#8220;Wikipedia is not paper; if we can have articles for every minor character in <em>Star Wars</em>, <em>Star Trek</em>, and each of those pesky Pokémon, we can have an article about Professor Hopper.&#8221; (See the <a href="https://blog.wikimedia.org/2016/02/26/pokemon-wikipedia-impact/">article on the Wikimedia blog</a> for the full story).</p>

<p>I played around with the <a href="https://query.wikidata.org">Wikidata Query Service</a> and <a href="https://en.wikipedia.org/wiki/SPARQL">SPARQL</a> queries recently. As one of the first projects on Wikidata was <a href="https://www.wikidata.org/wiki/Wikidata:WikiProject_Pok%C3%A9mon">WikiProject Pokémon</a> (initially known as the Pokémon Task Force), information on the fictional Pokémon species and their numbers (the Pokédex numbers) is rather complete. A query with SPARQL for all Pokémon is easy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Gotta catch 'em all
</span><span class='line'>SELECT ?pokemon ?pokemonLabel ?pokedexNumber
</span><span class='line'>WHERE
</span><span class='line'>{
</span><span class='line'>  ?pokemon wdt:P31 wd:Q3966183.
</span><span class='line'>     ?pokemon wdt:P1112 ?pokedexNumber
</span><span class='line'>SERVICE wikibase:label { bd:SERVICEParam wikibase:language "en" }
</span><span class='line'>} ORDER BY (?pokedexNumber)</span></code></pre></td></tr></table></div></figure>


<p><a href="http://tinyurl.com/jht8n3w">You can try out this query</a>.</p>

<p>But I wanted a query that was a little more complex: <em>Find all Pokémon with a number in the Pokédex that is prime</em>. My first try didn&#8217;t work.  The mistake I made: I wanted to compare the Pokédex number with the label of a prime number. Unfortunately, the label service in the Wikidata Query Service fills in labels too late to use them in a subquery. But the community was helpful as ever. <a href="https://www.wikidata.org/wiki/User:Nikki">User:Nikki</a> pointed me in the correct direction: Use <code>rdfs:label</code> instead.
Here&#8217;s the solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Gotta catch 'em all if they are prime
</span><span class='line'>SELECT ?pokemon ?pokemonLabel ?pokedex WHERE {
</span><span class='line'>{ 
</span><span class='line'>  SELECT ?prime WHERE {
</span><span class='line'>    ?p wdt:P31 wd:Q49008;
</span><span class='line'>   rdfs:label ?prime FILTER (lang(?prime) = "en") .
</span><span class='line'>         }
</span><span class='line'>  }
</span><span class='line'>  ?pokemon wdt:P31 wd:Q3966183;
</span><span class='line'>   wdt:P1112 ?pokedex FILTER (xsd:integer(?pokedex) = xsd:integer(?prime)).
</span><span class='line'>  SERVICE wikibase:label { bd:serviceParam wikibase:language "en". }.
</span><span class='line'>}
</span><span class='line'>ORDER BY ?pokedex</span></code></pre></td></tr></table></div></figure>


<p><a href="http://tinyurl.com/hszk5ya">Try it out</a></p>

<p>But there&#8217;s an even simpler solution without a subquery that is obvious once you wrape your head around the fact that query doesn&#8217;t work like <code>map</code> in functional languages but is rather closer to <a href="https://en.wikipedia.org/wiki/Declarative_programming">declarative programming</a>. It&#8217;s basically: &#8220;Find a solution that satisfies all the triples given above&#8221;.</p>

<p>See it here:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Gotta catch 'em all if they are prime
</span><span class='line'>SELECT ?pokemon ?pokemonLabel ?pokedex WHERE {
</span><span class='line'>?prime wdt:P31 wd:Q49008;
</span><span class='line'>   wdt:P1181 ?pokedex .
</span><span class='line'>      
</span><span class='line'>?pokemon wdt:P31 wd:Q3966183;
</span><span class='line'> wdt:P1112 ?pokedex .
</span><span class='line'>
</span><span class='line'>SERVICE wikidatabase:label { bd:serviceParam wikibase:language "en". }.
</span><span class='line'>}
</span><span class='line'>ORDER BY ?pokedex</span></code></pre></td></tr></table></div></figure>


<p><a href="http://tinyurl.com/z92ammg">Try out this</a></p>

<p>Thanks again, <a href="https://www.wikidata.org/wiki/User:Nikki">User:Nikki</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nebeneinkünftequartett der Bundestagsabgeordneten – Offene Karten mit offenen Daten]]></title>
    <link href="http://blog.johl.io/blog/2015/12/23/bundestagsquartett/"/>
    <updated>2015-12-23T19:05:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/12/23/bundestagsquartett</id>
    <content type="html"><![CDATA[<p>Seit einiger Zeit gibt es die Nebeneinkünfte der Bundestagsabgeordneten als offene Daten. Die Berliner von OpenDataCity haben seinerzeit daraus eine JSON-Datei gebastelt, die in zehn Stufen einmalige, monatliche und jährliche Nebeneinkünfte vermerkt (noch genauer wollten es die Abgeordneten dann doch nicht haben mit der Transparenz).</p>

<p>Mit Python, <a href="https://www.wikidata.org/wiki/Wikidata:Main_Page">Wikidata</a>, <a href="https://mustache.github.io/">Mustache</a> und SVG habe ich mich hingesetzt und daraus Spielkarten gebastelt, für besinnliche Quartettrunden mit Offenen Daten an langen Winterabenden.</p>

<p>So sieht etwa die Spielkarte für Dr. h. c. Hans Michelbach aus der CDU/CSU-Fraktion aus:</p>

<p><img src="http://www.johl.io/static/img/michelbach.png" alt="Dr. h. c. Hans Michelbach"></p>

<p>Den kompletten Satz aller Spielkarten gibt es als <a href="https://www.johl.io/static/BTQuartettKarten.zip">.zip-Datei zum Download</a>.</p>

<p>Das Python-Skript, um die Spielkarten selbst zu generieren, liegt <a href="https://github.com/johl/btquartett">auf github</a>. Nicht in allen Fällen konnte ich mit Wikidata ein Bild des oder der Abgeordneten finden, im Zweifel liegt das aber an mir.</p>

<p>Viel Spaß beim Spiel und möge das höhere Nebeneinkommen gewinnen. Oder so.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zwei akademische Papers zu Computerspielen und Daten aus Freiem Wissen]]></title>
    <link href="http://blog.johl.io/blog/2015/11/30/games/"/>
    <updated>2015-11-30T16:23:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/11/30/games</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://antoniosliapis.com/papers/data_adventures.pdf">Data Adventures</a> <em>This paper outlines a system for generating adventure games based on open data, and describes a sketch of the system implementation at its current state. The adventure game genre has been popular for a long time and differs significantly in design priorities from game genres which are commonly addressed in PCG research. In order to create believable and engaging content, we use data from DBpedia to generate the game’s non-playable characters locations and plot, and OpenStreetMaps to create the game’s levels.</em></li>
<li><a href="ftp://ftp.tik.ee.ethz.ch/pub/students/2015-FS/BA-2015-13.pdf">Drawing Questions from Wikidata</a> <em>Bachelor Thesis by Fabian Bissig, Distributed Computing Group, Computer Engineering and Networks Laboratory, ETH Zürich</em></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wikidata-Items schnell auf der Kommandozeile nachschlagen? Mediawiki APIs hacken]]></title>
    <link href="http://blog.johl.io/blog/2015/09/29/wikidata-cli/"/>
    <updated>2015-09-29T13:37:00+02:00</updated>
    <id>http://blog.johl.io/blog/2015/09/29/wikidata-cli</id>
    <content type="html"><![CDATA[<p>Ein richtiger Hack ist das nicht, aber es ist besser, wenn ich das folgende aufschreibe, bevor ich es wieder vergesse.</p>

<p><a href="https://www.wikidata.org/wiki/Wikidata:Main_Page">Wikidata</a> benutzt für jeden <a href="https://www.wikidata.org/wiki/Wikidata:Glossary#Entities.2C_items.2C_properties_and_queries">Wissensgegenstand</a> in der Datenbank einen Bezeichner, der mit Q beginnt (oder mit P, wenn es sich um eine Eigenschaft handelt). Berlin ist z.B. <a href="https://www.wikidata.org/wiki/Q64">Q64</a>.</p>

<p>Wenn ich etwa mit <a href="http://googleknowledge.github.io/qlabel/">qLabel</a> die Möglichkeiten multilingualer Labels auf Basis von Wikidata in Webseiten benutzen will, brauche ich diese Bezeichner mit Q für alles, was übersetzt werden soll.</p>

<p>Prima wäre es, wenn ich auf der Kommandozeile einfach ein paar Begriffe eingeben könnte und die entsprechenden Q-Bezeichner als Liste bekomme.  Und so wird&#8217;s gemacht:</p>

<p>Die API von Wikidata folgt im Grunde der allgemeinen MediaWiki-API, die ich schon <a href="http://blog.johl.io/blog/2014/11/17/mediawiki-api/">an anderer Stelle beschrieben</a> habe.</p>

<p>Um jetzt auf der Kommandozeile darauf zuzugreifen, brauche ich noch zwei
Tools:</p>

<ul>
<li><a href="http://curl.haxx.se/">curl, ein Kommandozeilen-Tool zum Übertragen von Daten anhand von URLs</a></li>
<li><a href="https://stedolan.github.io/jq/">jq, einen JSON-Prozessor für die Kommandozeile</a></li>
</ul>


<p>Der Begriff &#8220;Hacker&#8221; ist schön zweideutig und kann viele Bedeutungen annehmen, die jeweils eigene Wissensgegenstände in Wikidata mit eigenem Q-Bezeichner sind. Suchen wir doch einfach danach!</p>

<h3>Suche nach einem Titel (z.B. in der englischen Wikipedia)</h3>

<p><code>curl -s https://www.wikidata.org/w/api.php\?action\=wbgetentities\&amp;sites\=enwiki\&amp;titles\=Hacker\&amp;languages\=en\&amp;format\=json | jq -r '.entities | keys'</code></p>

<p>Hier bekommen wir nur einen Q-Bezeichner zurück, nämlich genau den, der zu der Seite mit dem Titel &#8220;Hacker&#8221; in der englischen Wikipedia passt (in dem Fall: eine Begriffserklärungs-Seite).</p>

<h3>Suche nach Labels von Wissensgegenständen</h3>

<p><code>curl -s https://www.wikidata.org/w/api.php\?action\=wbsearchentities\&amp;search\=Hacker\&amp;language\=en\&amp;format\=json | jq -r '[.search[].id]'</code></p>

<p>Hier bekomme eine längere Liste, z.B. mit dem Computerspiel gleichen Namens, der Subkultur, dem Begriff in der Computersicherheit etc.</p>

<p>Mit <code>curl</code> und <code>jq</code> zusammen kann ich mir beliebige Kommandozeilen-Programme für die Wikidata-API schreiben und auf das zurückgegebene JSON-Ergebnis zugreifen. Die Möglichkeiten sind fast endlos.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mischmasch]]></title>
    <link href="http://blog.johl.io/blog/2015/03/01/mischmasch/"/>
    <updated>2015-03-01T22:43:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/03/01/mischmasch</id>
    <content type="html"><![CDATA[<p>Vielleicht fing es alles auf dem Apple II an. Wenn du zu lange in die Tabellenkalkulation hineinblickst, blickt die Tabellenkalkulation auch in dich hinein. Vielleicht fing unser Blick auf die jetzige Ökonomie 1978 mit VisiCalc an – <a href="https://medium.com/backchannel/a-spreadsheet-way-of-knowledge-8de60af7146e">spekuliert zumindest Steven Levy</a>: &#8221;<em>Moreover, we are becoming a society of businesspeople. We speak in a jargon derived from the business world (“What’s the bottom line on this?”). We read columns on “personal money management” that urge us to speculate in markets once reserved for the very few. We have accepted the venture capitalist as a role model. The buzz word these days in computer software firms looking to expand their markets is “personal productivity,” as if the home itself — maybe life itself – were best viewed as a business.</em>&#8221;</p>

<p>Keine Spekulation: Ökonomisch verändert sich was im Weltgefüge. Es ist aber nicht alles Share, was glänzt. <a href="http://jetzt.sueddeutsche.de/texte/anzeigen/591846/Geld-her">Manchmal ist es einfach nur Warenform statt Teilen</a>. Vielleicht hilft uns die Wissenschaft namens Cliodynamics, die Isaac Asimov noch als <em>psychohistory</em> als Science Fiction beschrieb, dabei <a href="http://www.wired.com/2013/04/cliodynamics-peter-turchin/all/">endlich die Zukunft zu verstehen</a>.</p>

<p>Und es bleibt ja immer noch Code, wenn du sonst niemanden hast. Damit kannst du <a href="http://red-badger.com/blog/2015/02/23/understanding-the-enigma-machine-with-30-lines-of-ruby-star-of-the-2014-film-the-imitation-game/">die Enigma verstehen</a> (in nur 30 Zeilen). Oder <a href="https://github.com/kanaka/mal">ein Lisp bauen</a> (in 26 Sprachen).</p>

<p>Was? Warum ich mich mit so einem Quatsch beschäftige? Weil das hier mein Blog ist, vielen Dank, <a href="http://www.theatlantic.com/technology/archive/2015/02/thedress-and-the-rise-of-attention-policing/386357/">liebe Aufmerksamkeitspolizei</a>. Während ich dies schreibe wird langsam weiss zu gold. Halt nein, es war schon immer schwarz und blau.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nachrichten aus der Zukunft]]></title>
    <link href="http://blog.johl.io/blog/2015/02/22/links/"/>
    <updated>2015-02-22T15:17:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/02/22/links</id>
    <content type="html"><![CDATA[<ul>
<li>&#8220;<a href="http://fusion.net/story/48656/who-do-we-blame-when-robots-threaten-to-kill-people/">Who do we blame when a robot threatens to kill people?</a>&#8221; Können Markov-Ketten und Twitter-Bots für Morddrohungen zur Verantwortung gezogen werden?</li>
<li>&#8220;<a href="http://www.nature.com/news/us-regulators-try-to-tame-wild-west-of-dna-testing-1.16962">US regulators try to tame &#8216;wild west&#8217; of DNA testing</a>&#8221; DNA-Tests wie im Wilden Westen.</li>
<li>&#8220;<a href="http://www.theatlantic.com/technology/archive/2013/01/ibms-watson-memorized-the-entire-urban-dictionary-then-his-overlords-had-to-delete-it/267047/">IBM&#8217;s Watson Memorized the Entire &#8216;Urban Dictionary,&#8217; Then His Overlords Had to Delete It</a>&#8221; <em>Watson couldn&#8217;t distinguish between polite language and profanity &#8211; which the Urban Dictionary is full of. Watson picked up some bad habits from reading Wikipedia as well. In tests it even used the word &#8220;bullshit&#8221; in an answer to a researcher&#8217;s query.</em> &#8220;I&#8217;m sorry, Dave. I can&#8217;t do that bullshit.&#8221;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ökonomie, Griechenland und das Internet der Dinge]]></title>
    <link href="http://blog.johl.io/blog/2015/02/21/oekonomie/"/>
    <updated>2015-02-21T21:13:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/02/21/oekonomie</id>
    <content type="html"><![CDATA[<p>In Sachen Ökonomie lohnt ein Blick nach Griechenland. Bei den alten Griechen war die Trennung klar: Es gab die Ökonomie, was wörtlich bedeutet: <em>Dinge, die den Haushalt und die Privatsphäre betreffen</em>. Als Gegenstück gab es die Politik, was wörtlich meinte: <em>Dinge, die den Staat betreffen</em>.</p>

<p>Mittlerweile sind ein paar hundert Jahre ins Land gegangen und die gegenwärtigen Assoziationen zu Griechenland und Ökonomie dürften sich verändert haben. Im Jahre 2013 hielt Yanis Varoufakis auf dem sechsten Subversive Festival in Zagreb einen Votrag über Ökonomie und Theorien dazu. Der Titel seines Vortrags, den der Guardian bearbeitet vor ein paar Tagen veröffentlichte: &#8221;<a href="http://www.theguardian.com/news/2015/feb/18/yanis-varoufakis-how-i-became-an-erratic-marxist">How I became an erratic Marxist</a>&#8221;.</p>

<p>Varoufakis, Dozent für Wirtschaftswissenschaften, Berater und später scharfer Kritiker der früheren griechischen Regierung und ehemaliger Hausökonom für den Spielehersteller Valve, ist mittlerweile Finanzminister in der Regierung Griechenlands, die von der radikalen Linken zusammen mit einer rechtspopulistischen Partei in einer Koalition gebildet wird.</p>

<p>Auch wenn man ihm nicht zustimmen mag, kann man auf jeden Fall sagen: Sein Text ist bedachtsam formuliert und klar in den Argumenten, die er entwickelt. Er beschreibt seine persönlichen Probleme damit, einerseits in seinem Denken stets von Marxschen Gedanken geprägt gewesen zu sein und führt andererseits auch zwei Probleme auf: die Unfähigkeit marxistischer Theorie, sich mit den Irrungen und auch Verbrechen derjenigen zu beschäftigen, die diese Theorie für sich reklamierten und das Problem, bei der Beschäftigung mit Kapitalismus und Krise allein auf Rechnungen und Zahlenspielereien wie im Kapital zu vertrauen.</p>

<p>Für Varoufakis ist seine persönliche Schlussfolgerung, für die er Kritik aus der Linken einstecken musste: Eine Freude über Krise und Zusammenbruch des Kapitalismus in Europa kann er nicht empfinden. Obwohl er gerne etwas hätte, was besser ist als der Kapitalismus, sieht er sich in der jetzigen geschichtlichen Situation gezwungen, diesen vor dem totalen Zusammenbruch zu bewahren – aus Gründen der Menschlichkeit und aus antifaschistischer Überzeugung:</p>

<blockquote><p>As the whole world now knows, Papandreou’s party not only failed to stem xenophobia but, in the end, presided over the most virulent neoliberal macroeconomic policies that spearheaded the eurozone’s so-called bailouts thus, unwittingly, causing the return of Nazis to the streets of Athens.</p><p>(&#8230;) </p><p>A Greek or a Portuguese or an Italian exit from the eurozone would soon lead to a fragmentation of European capitalism, yielding a seriously recessionary surplus region east of the Rhine and north of the Alps, while the rest of Europe is would be in the grip of vicious stagflation.  Who do you think would benefit from this development? A progressive left, that will rise Phoenix-like from the ashes of Europe’s public institutions? Or the Golden Dawn Nazis, the assorted neofascists, the xenophobes and the spivs? I have absolutely no doubt as to which of the two will do best from a disintegration of the eurozone.  </p><p>I, for one, am not prepared to blow fresh wind into the sails of this postmodern version of the 1930s. If this means that it is we, the suitably erratic Marxists, who must try to save European capitalism from itself, so be it. Not out of love for European capitalism, for the eurozone, for Brussels, or for the European Central Bank, but just because we want to minimise the unnecessary human toll from this crisis.</p><footer><strong>Yanis Varoufakisi</strong><cite>&#8220;How I Became an Erratic Marxist&#8221;</cite></footer></blockquote>


<p>Interessanterweise sieht ein Minister einer radikal linken Regierungspartei momentan keine Möglichkeit, den Kapitalismus zu überwinden, während ein US-amerikanischer Soziologe, Ökonom und Publizist, der ganz ohne marxistische Prägung in der Biographie daherkommt, in seinem aktuellen Buch bereits das Ende des Kapitalismus einläutet. In seinem 2014 erschienenen Buch &#8221;<em>The Zero Marginal Cost Society: The internet of things, the collaborative commons, and the eclipse of capitalism</em>&#8221; vertritt Jeremy Rifkin die These, dass sich angesichts nahezu kostenfrei möglicher weltweiter Vernetzung, Kommunikation sowie Datenerfassung und -austauschs die Zusatzkosten für Produkte (so genannte Grenzkosten) gegen Null entwickeln würden. Er spricht davon, dass mit der Entwicklung hin zu einer neuen Wirtschaftsordnung namens <em>collaborative commons</em> Voraussetzungen für eine „dritte industrielle Revolution“ vorlägen.</p>

<p>Jeremy Rifkins Analyse der kapitalistischen Produktionsweise in einer immer mehr auf das Teilen zu fallenden Grenzkosten ausgerichteten Gesellschaft liest sich aufregend: Endlich werden wieder große Fragen gestellt und endlich gibt es wieder Utopien. Manches an seiner Theorie wirkt seltsam: Inwiefern es eine Keimform der Sharing Ecomony ist, wenn selbst Gastfreundschaft ganz klassisch kapitalistisch in Warenform gepresst wird (Uber, AirBnb), verstehe ich nicht ganz. Und dann werden Zukunftsaussichten mit einem sehr breiten Pinsel gemalt: Energie wird quasi kostenlos durch erneuerbare Energiequellen und immer wieder: das Internet of Things (IoT) wird uns Echtzeitdaten zur Ökonomie geben und den Markt alt aussehen lassen.</p>

<p>Mit Michael Seemann hatte ich vor ein paar Tagen ein Gespräch darüber. Seine Position in dem Gespräch, dass Märkte nicht verschwinden werden und Planwirtschaft eh schon in Unternehmen praktiziert wird, hat er <a href="http://www.ctrl-verlust.net/planwirtschaft-vs-marktwirtschaft-unter-digitalen-bedingungen/">in einem Blogartikel</a> aufgeschrieben.</p>

<p>Vielleicht ist das Internet der Dinge tatsächlich ein möglicher Faktor für eine ganz andere Ökonomie jenseits des Kapitalismus. Vielleicht war  <a href="https://de.wikipedia.org/wiki/Cybersyn">Cybersyn</a>, bei der die sozialistische Regierung Salvador Allendes versuchete, eine nationale Ökonomie mit Hilfe eines archaischen Vorgängers des Internets der Dinge zu steuern, einfach ihrer Zeit voraus und musste nicht nur wegen des CIA-Putsches gegen Allende, sondern auch wegen der technischen Machbarkeit scheitern. Vielleicht brauchten wir erst die Erfahrung mir eBay und Craigslist, um uns eine radikal andere Ökonomie mit einem <a href="http://keimform.de/2013/ein-universelles-stigmergisches-allokationsystem/">universellen stigmergischen Allokationsystem</a> überhaupt vorstellen zu können, aus dem sich eine Commons-basierte Peer Production (&#8221;<em>Jeder nach seinen Fähigkeiten, jedem nach seinen Bedürfnissen, alles geroutet in einem offenen Internet</em>&#8221;) entwickeln kann. Und wer weiss, was sich noch alles im Internet der Dinge bewegt in Zukunft, wenn wir selbst Teil davon geworden sind. Menschen mit seltsamen Vorstellungen von Zeitvertreib grübeln zumindest schon darüber nach, <a href="http://aaronparecki.com/articles/2013/10/11/1/the-future-of-quantified-self-devices">wie Quantified Self in Zukunft aussehen kann</a> – während die Mehrheit der Menschen auf diesem Planeten von Quantified Self nicht mal gehört haben dürfte.</p>

<p>Und ja, auch Fragen der Privatsphäre betrifft dann dieser Traum einer anderen Ökonomie, die den Kapitalismus ersetzen soll. Des einen Internet der Dinge ist des anderen Totalberwachung – ein Einwand, den Rifkin eher lustlos zur Seite schiebt mit einem schwammingen Hinweis darauf, dass Fragen des Datenschutzes und der Privatheit neu reguliert werden müssten. Er weist allerdings auch darauf hin, dass das Leben im Privaten oder überhaupt eine Vorstellung davon, was privat ist, erst mit dem Kapitalismus entstand:</p>

<blockquote><p>Erst in der kapitalistischen Ära begannen die Menschen, sich hinter verschlossene Türen zurückzuziehen. Das Leben des Bürgers war eine private Angelegenheit. Obwohl die Menschen eine öffentliche Rolle annahmen, spielte sich ein Gutteil ihres Alltagslebens in abgeschiedenen Räumen ab. Zu Hause lebte man noch isolierter in separaten Räumen, jeder mit seiner eigenen Funktion – Salon, Musikzimmer, Bibliothek usw. Zum ersten Mal begann man sogar in getrennten Betten und Zimmern zu schlafen. Einhegung und Privatisierung des menschlichen Lebens gingen Hand in Hand mit der Einhegung und Privatisierung der Allmenden. In der neuen Welt des Privateigentums, wo alles auf die Dichotomie »mein« und »dein« reduziert war, nahm die Idee eines autonom Handelnden, inmitten seiner Besitztümer und von der Welt Abgeschnitten, ein Eigenleben an.  Das Recht auf Privatleben wurde zum Recht auf Ausschluss des anderen.</p><footer><strong>Jeremy Rifkin</strong><cite>&#8220;Die Null-Grenzkosten-Gesellschaft: Das Internet Der Dinge Kollaboratives Gemeingut Und Der Rückzug Des Kapitalismus&#8221;</cite></footer></blockquote>


<p>Grundrechte wie das auf Privatheit sind nur schwer mit einer extremen Vision einer Ökonomie zu vereinbaren, die Rifkin mit dem Internet der Dinge erträumt – <a href="http://www.internetofuselessthings.io/">und die andere längst parodieren, wenn sie IoT-Erfindungen zur Messung des Stuhlgangs in schickem Design auf auf Webseiten packen</a>.</p>

<p>Andererseits – die positive Utopie einer Gesellschaft, in der ein ökonomisches System wie der Kapitalismus trotz seiner scheinbaren Allgegewart und Unüberwindbarkeit in Frage gestellt werden kann, beinhaltet, dass wir uns nicht nur um bürgerliche Grundrechte bemühen, sondern auch die Frage nach der ökonomischen Teilhabe neu stellen. Es kann durchaus auch politisch über eine andere Ökonomie entschieden werden. Den alten Griechen würde es ob dieser linguistischen Widersprüchlichkeit grausen. Was haben <em>Dinge, die den Haushalt und die Privatsphäre betreffen</em> denn zu tun mit <em>Dingen, die den Staat betreffen</em>? Im Wortsinne wäre eine politische Ökonomie nichts für die alten Griechen.</p>

<p>Die aktuellen Griechen mögen das anders sehen. Politics? It&#8217;s the economy, stupid!</p>

<blockquote><p>Perhaps the most significant dimension of the neoliberal triumph is what has come to be known as the “democratic deficit”. Rivers of crocodile tears have flowed over the decline of our great democracies during the past three decades of financialisation and globalisation. Marx would have laughed long and hard at those who seem surprised, or upset, by the “democratic deficit”. What was the great objective behind 19th-century liberalism? It was, as Marx never tired of pointing out, to separate the economic sphere from the political sphere and to confine politics to the latter while leaving the economic sphere to capital. It is liberalism’s splendid success in achieving this long-held goal that we are now observing. Take a look at South Africa today, more than two decades after Nelson Mandela was freed and the political sphere, at long last, embraced the whole population. The ANC’s predicament was that, in order to be allowed to dominate the political sphere, it had to give up power over the economic one. And if you think otherwise, I suggest that you talk to the dozens of miners gunned down by armed guards paid by their employers after they dared demand a wage rise.</p><footer><strong>Yanis Varoufakisi</strong><cite>&#8220;How I Became an Erratic Marxist&#8221;</cite></footer></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auszeit]]></title>
    <link href="http://blog.johl.io/blog/2015/02/08/auszeit/"/>
    <updated>2015-02-08T23:01:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/02/08/auszeit</id>
    <content type="html"><![CDATA[<p>An dieser Stelle hätte ein interessanter Blogartikel stehen können,
vielleicht mal wieder über ein Programmierprojekt. Aus gesundheitlichen
Gründen kam es diese Woche nicht dazu. Schauen wir, was die nächste
Woche bringt&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackerspaces im Landtag NRW]]></title>
    <link href="http://blog.johl.io/blog/2015/01/25/hackerspaces/"/>
    <updated>2015-01-25T17:42:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/01/25/hackerspaces</id>
    <content type="html"><![CDATA[<p>Am 15. Januar war ich eingeladen, zusammen mit <a href="https://wiki.chaosdorf.de/User:Nomaster">Mic &#8220;nomaster&#8221; Szillat</a> etwas zum Thema &#8220;Hackerspaces als neuer Kulturraum&#8221; zu erzählen und zwar im <a href="http://www.landtag.nrw.de/portal/WWW/Navigation_R2010/030-Parlament-und-Wahlen/015-Ausschuesse-und-Gremien/005-Ausschussuebersicht/A12/Inhalt.jsp">Ausschuss für Kultur und Medien</a> des Landtags von Nordrhein-Westfalen. Auf die Tagesordnung des Ausschusses gesetzt wurde der Punkt von der Piratenfraktion im Landtag, darum bemüht hatte sich insbesondere <a href="http://www.piratenfraktion-nrw.de/author/lukas-lamla/">Lukas &#8220;maltis&#8221; Lamla</a>.</p>

<p><a href="https://docs.google.com/presentation/d/1gij0Og3la2FrDCYEkr3vMy3aEHGnQGVaWxX9rM8qt_k/edit?usp=sharing">Unsere Präsentation vor dem Ausschuss ist als Google-Doc einzusehen</a>.</p>

<blockquote class="twitter-tweet" lang="en"><p>Der <a href="https://twitter.com/johl">@johl</a> und <a href="https://twitter.com/nomaster">@nomaster</a> an der Seite des Ministers a.D. Fritz Behrens ;D <a href="http://t.co/N8hSSJNDfR">pic.twitter.com/N8hSSJNDfR</a></p>&mdash; Lukas Lamla (@Maltis) <a href="https://twitter.com/Maltis/status/555708126306263041">January 15, 2015</a></blockquote>


<p> <script async src="http://blog.johl.io//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>So einen Programmpunkt in einem Landtagsausschuss gab es nicht zum ersten Mal, <a href="https://www.piratenfraktion-berlin.de/2012/09/17/kultur-und-hackerspaces-eine-anhorung/">2012 stellten Lars Weiler aka Pylon und Frank Rieger bereits Hackerspaces im Kulturausschuss des Abgeordnetenhauses von Berlin vor</a>. Pylon hatte zu der Anhörung auch <a href="http://konvergenzfehler.de/2012/09/17/hackerspaces-im-abgeordnetenhaus-von-berlin/">gebloggt</a>.</p>

<p>Geplant und durchgeführt war die Präsentation als erster Aufschlag, um die Abgeordneten mit dem Thema vertraut zu machen. Dafür war es erfolgreich, so zumindest meine Wahrnehmung. Aus allen Parteien gab es ehrliches Interesse. Die Frage eines Abgeordneten der FDP, ob Hackerspaces als eine Art &#8220;anarchistische Volkshochschule&#8221; zu verstehen seien fand ich besonders originell und aufschlussreich. Insgesamt zeigte sich wohlwollendes Nicken in der Runde, besonders bei Themen, die bei der Durchschnittsbevölkerung noch als Science-Fiction verstanden werden (3D-Drucker) oder wenn es Anknüpfungspunkte zur Lebensrealität der Abgeordneten gab (Foodhacking, Theater in Hackerspaces). Aus dem Ministerium gab es nach der Präsentation Feedback und Interessensbekundungen.</p>

<p>Und jetzt? Jetzt gilt es, politische Ideen und vielleicht sogar ein <em>actionable Item</em> in Form eines Antrags aus dem zu machen, was in der Hackerspace-Bewegung an Ideen vorhanden ist. Hackerspaces sind sicher nicht so einfach zu fördern wie das Stadttheater um die Ecke, ihre extrem lockere (aber international vernetzte) Struktur, ohne &#8220;Bundesverband der Hackerspaces, Landeskammer NRW&#8221; macht es nicht einfach, einen Dialog zu führen — andererseits ist diese Struktur aber auch gerade die Stärke der Bewegung. Eine experimentelle Annäherung an Förderungsstrukturen für lose vernetzte Akteure im Bereich der elektronischen Kunst wurde bereits in Wien versucht. <a href="https://en.wikipedia.org/wiki/Netznetz">Netznetz Mana</a> dient nach dem epischen Scheitern aufgrund von Ego-Inkompatibilitäten und eingestellter Förderung aber vielleicht eher als schlechtes Beispiel, aus dem wir lernen können…</p>

<p>Die Forschung zum Thema Kulturförderung von Hackerspaces hat gerade erst begonnen. Vermutlich ist das Katzenhüten hier eine Herausforderung, mit dem die Förderung der freiesten aller freien Theatergruppen nicht mal im Ansatz verglichen werden kann.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mein Internet ist leer! Was könnte ich sonst noch lesen?]]></title>
    <link href="http://blog.johl.io/blog/2015/01/17/lesen/"/>
    <updated>2015-01-17T21:29:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/01/17/lesen</id>
    <content type="html"><![CDATA[<p>Zum Glück gibt es im Internet mehr als genug Links. Zum Lesen bleibt immer etwas. Es gäbe diesen Artikel darüber, <a href="http://www.vice.com/read/something-for-everyone-0000546-v22n1">warum sich die Elite im Silicon Valley neuerdings für das Bedingungslose Grundeinkommen interessiert</a>:„<em>Basic income, it turns out, is in the peculiar class of political notions that can warm Leninist and libertarian hearts alike. Though it&#8217;s an essentially low-tech proposal, it appeals to Silicon Valley&#8217;s longing for simple, elegant algorithms to solve everything. Supporters list the possible results: It can end poverty and inequality with hardly any bureaucracy. With more money and less work to do, we might even spew less climate-disrupting carbon.</em>“</p>

<p>Dann ist da noch ein Fanzine für Sci-Fi mit afrikanischer Perspektive: <a href="http://omenana.com/">omenana aus Nigeria</a>.</p>

<p>Dieser Text von <a href="https://en.wikipedia.org/wiki/Martin_Fowler">Martin Fowler</a> (der mit dem Refactoring) ist auch sehr lesenswert: <a href="http://martinfowler.com/bliki/DiversityMediocrityIllusion.html">DiversityMediocrityIllusion</a>. „<em>A common argument against pushing for greater diversity is that it will lower standards, raising the spectre of a diverse but mediocre group.  To understand why this is an illusionary concern, I like to consider a little thought experiment.</em>“</p>

<p>Oder die Seite von <a href="https://www.afrileaks.org/">afriLeaks</a>: „<em>afriLeaks allows you to leak confidential documents of public interest. We’ve designed a system that helps you to share these materials while protecting your own identity, making it very hard to identify you as the source of the leak.  AfriLeaks is run by an alliance of African news organisations that are committed to speaking truth to power. You will be able to send us documents and select which of our member organisations should investigate it. This site also helps you to stay in touch and answer further questions without revealing your name or contact information.</em>“</p>

<p>Interessant ist auch dieses Experiment zu Urban Gardening und den Commons, über Schafe in der Stadt: <a href="https://stadtschnuggen.wordpress.com/2015/01/11/claim-the-street-for-your-sheep/">Stadtschnuggen</a>.</p>

<p>Vielleicht habt ihr ja schon den Artikel von Cory Doctorow gelesen „<a href="http://www.wired.com/2014/12/government-computer-security"><em>How Laws Restricting Tech Actually Expose Us to Greater Harm</em></a>“ oder die <a href="http://www.cluetrain.com/newclues/">New Clues</a> von den Autoren des <a href="https://en.wikipedia.org/wiki/The_Cluetrain_Manifesto">Cluetrain Manifesto</a>. Wenn nicht, könnt ihr das nachholen.</p>

<p>Es gibt aber auch Lesestoff zur Urheberrechtsproblematik in der Modebranche: „<a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=878401"><em>The Piracy Paradox: Innovation and Intellectual Property in Fashion Design</em></a>“. Und aus Polen stammt eine Textsammlung mit Zukunftsvisionen zum Immaterialgüterrecht: „<a href="http://prawokultury.pl/scenarios/"><em>Right to Culture: Future Scenarios</em></a>“.</p>

<p>Bei so viel Stoff zum Lesen ist es ganz gut, dass die Zukunft zumindest in einem Bereich hoffnungsvoll aussieht: „<a href="http://www.theguardian.com/science/2015/jan/11/-sp-live-forever-extend-life-calico-google-longevity"><em>Live for ever: Scientists say they’ll soon extend life ‘well beyond 120’</em></a>“.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Einhegungen fallen nicht vom Himmel]]></title>
    <link href="http://blog.johl.io/blog/2015/01/11/einhegungen/"/>
    <updated>2015-01-11T17:11:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/01/11/einhegungen</id>
    <content type="html"><![CDATA[<p>Aaron Swartz starb heute vor zwei Jahren. Das Internet ohne Einhegungen auf Grundlage der Allmende war bereits schon dabei, parzelliert und eingezäunt zu werden.</p>

<blockquote><p>Information is power. But like all power, there are those who want to keep it for themselves. The world&#8217;s entire scientific and cultural heritage, published over centuries in books and journals, is increasingly being digitized and locked up by a handful of private corporations. Want to read the papers featuring the most famous results of the sciences? You&#8217;ll need to send enormous amounts to publishers like Reed Elsevier. </p><p>There are those struggling to change this. The Open Access Movement has fought valiantly to ensure that scientists do not sign their copyrights away but instead ensure their work is published on the Internet, under terms that allow anyone to access it. But even under the best scenarios, their work will only apply to things published in the future.  Everything up until now will have been lost.  </p><p>That is too high a price to pay. Forcing academics to pay money to read the work of their colleagues? Scanning entire libraries but only allowing the folks at Google to read them?  Providing scientific articles to those at elite universities in the First World, but not to children in the Global South? It&#8217;s outrageous and unacceptable.</p><footer><strong>Aaron Swartz</strong><cite><a href='https://archive.org/details/GuerillaOpenAccessManifesto'>The Guerilla Open Access Manifesto</a></cite></footer></blockquote>


<p>Einhegungen, die aus einer Gemeinwirtschaft Privatbesitz schaffen, finden nicht über Nacht statt. In England begann die Transformation der Landwirtschaft im 16. Jahrhundert und war im 19. Jahrhundert abgeschlossen. Der Höhepunkt der Einhegungen lag zwischen 1760 und 1832, danach waren in Großbritannien die mittelalterlichen Strukturen so gut wie verschwunden, es gab das Konzept des gemeinwirtschaftlichen Landbesitzes nicht mehr.</p>

<p>Am Ende der Transformation war die Idee von Land, dass sich nicht in Privatbesitz befand, bereits so aus dem Bewusstsein verschwunden, dass der bloße Gedanke, über Privatgrundstücke könnten etwa Eisenbahnlinien geführt werden, von Liberalen als &#8220;Diebstahl&#8221; bezeichnet wurde.</p>

<p>George Orwell, der <a href="https://en.wikipedia.org/wiki/As_I_Please">in einer Reihe von Kommentaren für die linksgerichtete Tribune</a> in den 1940er Jahren davon schrieb, sah sich durch einen Kommentator eben dieses Vorwurfs ausgesetzt: Privateigentum an Land für die Allgemeinheit zu nutzen ist Diebstahl.</p>

<p>Daran zu erinnern, wie Landbesitz überhaupt zustande gekommen war, dass es kein vom Himmel gefallenes Naturrecht ist, sondern tatsächlich in einem Transformationsprozess mit Gewalt der Allmende entrissen wurde, war 1944 schon beinahe eine revolutionäre Aussage. Der englische Landadel hatte das Land der Gemeinwirtschaft schlicht unter sich aufgeteilt, mit keiner anderen Legitimation, als der, dass sie zur Durchsetzung ihrer Interessen Gewalt und Staat benutzen konnten. Die Grundlage der Agrarrevolution in England und Wales, die Verarmung der Landbevölkerung und die Freisetzung von Arbeitskräften für die Industrielle Revolution hatte keine andere Legitimation als die, dass die Interessengruppen des Landadels es einfach getan hatten.</p>

<blockquote><p>If giving the land of England back to the people of England is theft, I am quite happy to call it theft. In his zeal to defend private property, my correspondent does not stop to consider how the so-called owners of the land got hold of it. They simply seized it by force, afterwards hiring lawyers to provide them with title-deeds. In the case of the enclosure of the common lands, which was going on from about 1600 to 1850, the landgrabbers did not even have the excuse of being foreign conquerors; they were quite frankly taking the heritage of their own countrymen, upon no sort of pretext except that they had the power to do so.</p><footer><strong>George Orwell</strong><cite><a href='http://www.cooperativeindividualism.org/orwell-george_on-the-origins-of-property-in-land-1944.html'>On the Origins of Property in Land, 1944</a></cite></footer></blockquote>


<p>Erst sehr viel später setzte das Bewusstsein dafür ein, dass Wirtschaften mit Gemeingut nachhaltiger möglich ist. <a href="https://de.wikipedia.org/wiki/Elinor_Ostrom">Elinor Ostrom</a>, die 2009 als erste Frau den Alfred-Nobel-Gedächtnispreis für Wirtschaftswissenschaften für ihre Arbeiten zur Gemeinwirtschaft bekam, befasste sich mit der Frage, wie sich Menschen organisieren, um gemeinschaftlich komplexe Probleme zu lösen. Sie analysierte, wie institutionelle Regeln sich auf Handlungen von Individuen auswirken, die bestimmten Anreizen ausgesetzt sind, Entscheidungen treffen (müssen), und sich zudem noch gegenseitig beeinflussen, und sie zeigte praktikable, gerechte und effiziente Lösungen für diese Probleme auf.</p>

<p>In <a href="https://en.wikipedia.org/wiki/Landless_Workers%27_Movement">Brasilien</a> oder <a href="https://en.wikipedia.org/wiki/Narmada_Bachao_Andolan">Indien</a> entstanden soziale Bewegungen, die sich der revolutionären Erkenntnis widmeten, dass Gemeingut eben nicht von Natur aus eingezäunt werden muss, sondern gemeinsam verwaltet und bewirtschaftet werden kann. Dabei geht es nicht mal um utopische Forderungen wie die Abschaffung von Privateigentum — dieses bleibt neben der Allmende bestehen. Es geht darum, gleichberechtigt einen Raum zu schaffen, in dem kollaborativ, verantwortungsvoll und gemeinsam an der Grundlage des gemeinsamen Überlebens gearbeitet wird und die Schaffung von Einhegungen für das, was vorher nicht eingehegt war, nicht zu ohne Argumente zu akzeptieren.</p>

<p>Dem Internet und der Wissensallmende drohen Einhegungen, die von Landadeligen des 12. Jahrhunderts schrittweise vorgenommen werden, mit keinem anderen Argument als dem, dass es ihnen möglich ist. In Deutschland wurden Hecken und Grenzsteine etwa ab 2004 <a href="https://de.wikipedia.org/wiki/Urheberrechtsgesetz_(Deutschland)#Zweiter_Korb">beim sogenannten Zweiten Korb der Urheberrechtsreform</a> gesetzt, durch den die Rechte der Nutzerinnen und Nutzer eingeschränkt wurden und das Recht auf Privatkopie entstellt wurde. Das <a href="https://de.wikipedia.org/wiki/Leistungsschutzrecht_f%C3%BCr_Presseverleger">Leistungsschutzrecht für Presseverleger</a> ist eine Einhegung der Wiesen und Felder der Allmende im Internet mit keinem anderen Argument als dem, dass es eben mit Lobbyarbeit von Verlagen wie der Axel Springer SE möglich ist, diese als Gesetz durchzusetzen.</p>

<p>Es gibt keinen naturgegebenen Grund dafür, die Allmende zu zerstückeln und einzuhegen, wenn wir sie auch gemeinsam beackern können. Wir können mit Elinor Ostrom wirtschaftswissenschaftlich zeigen, dass Zusammenarbeit möglich und nachhaltig ist und moralisch ist das Argument &#8220;Ich kann es euch wegnehmen, weil ich es euch weggnehmen kann&#8221; einem kulturoptimistischem gemeinschaftlichen Wirtschaften nicht überlegen.</p>

<p>Im schlimmsten Fall sind Einhegungen tödlich. Am zweiten Todestag von Aaron Swartz lohnt es sich daran zu erinnern, dass durch Einhegungen der Wissensallmende einem großen Talent die Luft zum Atmen genommen wurde.  <a href="http://blog.johl.io/blog/2013/01/13/urheberrechtsextremismus/">So wie für den Suizid von Alan Turing die menschenverachtenden homophoben Gesetze der damaligen Zeit und die, die sie geschaffen haben, politisch verantwortlich sind, ist der Wahnsinn der Urheberrechtsextremisten verantwortlich für Aarons Tod. Copyright kills.  An den Händen der Urheberrechtsextremisten klebt sein Blut.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jahresrückblick 2014]]></title>
    <link href="http://blog.johl.io/blog/2015/01/02/jahresruckblick-2014/"/>
    <updated>2015-01-02T21:05:00+01:00</updated>
    <id>http://blog.johl.io/blog/2015/01/02/jahresruckblick-2014</id>
    <content type="html"><![CDATA[<p>Ja, war okay.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vollkommen subjektive Auswahl — was ich mir auf dem #31c3 ansehen werde (wenn ich dazu komme)]]></title>
    <link href="http://blog.johl.io/blog/2014/12/21/31c3/"/>
    <updated>2014-12-21T13:53:00+01:00</updated>
    <id>http://blog.johl.io/blog/2014/12/21/31c3</id>
    <content type="html"><![CDATA[<p>Der 31. <a href="https://de.wikipedia.org/wiki/Chaos_Communication_Congress">Chaos Communication Congress</a> naht. Das <a href="https://events.ccc.de/congress/2014/Fahrplan/">Programm</a> ist prall gefüllt mit wirklich hervorragenden Vorträgen und anderen Events. Aus Erfahrung kann ich sagen, dass es trotzdem schwierig ist, den Congress zum Anhören von Vorträgen zu planen, dafür passiert an allen Ecken einfach zuviel. Spätestens am zweiten Tag schmeisst man das sorgsam ausgearbeitete Programm über den Haufen und bleibt in einer Ecke kleben, wo verrückte Menschen gerade an etwas arbeiten, was unbeschreiblich ist und trotzdem hat man einen Congress erlebt, der unvergleichlich ist. Vielleicht ist es wichtiger, sich mit der <a href="https://github.com/MacLemon/CongressChecklist/blob/master/README.md">Checkliste</a> der mitzubringenden Sachen zu beschäftigen, als mit dem Programm. Da Vorträge aufgezeichnet werden, kann man sie später ja noch nachschauen — allerdings könnte das gleich zum nächsten Trugschluss werden: Wenn die &#8220;schau ich mir lieber in der Aufzeichnung an&#8221;-Liste zu lang wird, ist es dann auch wieder Dezember 2015, bis man sie durch hat.</p>

<p>That being said: Eine kleine Auswahl von Vorträgen, die ich in Erwägung ziehe, folgt. Große, für viele sozial wichtige Veranstaltungen (Jahresrückblicke etc.) habe ich erstmal nicht aufgeführt.</p>

<h1>Tag 1</h1>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6571.html">Die Keynote</a> von <a href="https://de.wikipedia.org/wiki/Alec_Empire">Alec Empire</a> versuche ich mir mal anzusehen. Wird bestimmt hyperreal und noisy. Von Alec Empire stammte schon die Musik zum Trailer vom letzten Jahr.</p>

<p>Dann gehe ich in Saal 2, zu <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6443.html">Trustworthy secure modular operating system engineering</a> von hannes und David. Hannes träumt seit ein paar Jahrzehnten vom Ausstieg aus der Unix-Technologie weltweit und jetzt sieht es so aus, als könnte es was werden, mit einem Betriebsystem, dass die Schwächen von C hinter sich lässt, indem es konsequent in OCaml implementiert wird. Diesmal ist es kein wilder Traum, sondern tatsächlich etwas, was u.a. mit Unterstützung der Uni in Cambridge echten Wumms erzeigen könnte.</p>

<p>Danach folgt das <a href="https://de.wikipedia.org/wiki/Zentrum_f%C3%BCr_politische_Sch%C3%B6nheit">Zentrum für politische Schönheit</a>: <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6584.html">Mit Kunst die Gesellschaft hacken</a>, also die mit den Mauerkreuzen an der EU-Aussengrenze und der Belohnung von 25.000€ für die Verhaftung der Eigentümerfamilie der Firma Krauss-Maffei Wegmann.</p>

<p>Parallel dazu findet ein Vortrag statt, den ich dadurch erst später sehen kann: <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6447.html">Let’s build our own personalized open textile production line</a>.  Schade, denn Open Source auf andere Bereiche der Ökonomie übertragen ist ein richtig spannendes Thema.</p>

<p>Ganz, ganz dick im Kalender steht bei mit der Vortrag zu <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6559.html">Jugend hackt</a>, nicht nur, weil ich in den letzten beiden Jahren das Projekt als Mentor mitbegleitet haben, sondern auch, weil ich alle Vortragenden total toll finde.</p>

<p>Später am Abend werde ich vielleicht bei <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6154.html">Crypto Tales from the Trenches</a> reinschauen, wo u.a. Laura Poitras davon berichtet, wie sie sich als Journalistin im direkten Kontakt mit Edward Snowden vor Ausspähung versuchte zu schützen. Anschliessend wird ihr Film <a href="https://de.wikipedia.org/wiki/Citizenfour_(Film)">CITIZENFOUR</a> gezeigt.</p>

<h1>Tag 2</h1>

<p>Vermutlich werde ich in <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6162.html">Programming with dependent types in Idris</a> gehen, weil ich eine Schwäche für Forschung im Bereich Programmiersprachen habe (und wir das Thema im <a href="http://currybuch.de/">Curry-Buch</a> auch kurz anscheiden). Allerdings läuft parallel <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6344.html">Security Analysis of Estonia&#8217;s Internet Voting System</a>.  Hm, mal sehen.</p>

<p>Klar ist dann allerdings <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6582.html">Das Transparenzportal Hamburg</a>.  Mit dem Hamburger Transparenzgesetz hatte ich ja auch schon <a href="http://blog.johl.io/blog/2014/01/06/lampedusaanfrage/">Erfahrungen gemacht</a>.</p>

<p>Später dann: <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6156.html">Fernvale: An Open Hardware and Software Platform, Based on the (nominally) Closed-Source MT6260 SoC</a>, was ich hauptsächlich auf dem Zettel habe, weil der Open-Hardware-Aktivist <a href="https://en.wikipedia.org/wiki/Andrew_Huang">bunnie</a> vorträgt und ich sein Projekt zum offenen Laptop so spannend finde.</p>

<h1>Tag 3</h1>

<p>An Tag 3 tritt das <a href="https://www.c-base.org/projects/c-atre/">c-atre</a> auf, was ich mir an dem Tag zwischen Lampenfieber und Rumgerenne überhaupt ansehen kann, wird sich zeigen. Unser Stück zu Urheberrecht und Zeitreisen <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6543.html">The Time is Right</a> gibt es am Abend, davor ist aber noch reichlich Programm.</p>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6350.html">Correcting copywrongs</a> von meiner <a href="https://de.wikipedia.org/wiki/Julia_Reda">Lieblings-Abgeordneten im EU-Parlament</a> ist gesetzt. Wird der Hammer.</p>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6547.html">&#8220;Exploit&#8221; in theater</a> klingt nicht uninteressant und hat auch was mit Theater zu tun, wenn es klappt, dann schau ich mir das vielleicht an.</p>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6366.html">IFG – Mit freundlichen Grüßen</a>, völlig angemessen in Saal 1, könnte ein Knüller werden. Letzter Jahr startete nach dem Congress-Vortrag von Stefan Wehrmeyer die Debatte um das <a href="https://fragdenstaat.de/presse/2014-01-21-bmi-mahnt-fragdenstaat-ab/">Zensurheberrecht</a>. Ich erwarte eine ähnliche Bombe dieses Jahr :)</p>

<p>Dann ist Theater. Parallel zu unserer Aufführung gibt es einen Vortrag zu <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6253.html">Computer und Informatik in Nordkorea</a>, den ich dann wohl als Aufzeichnung sehen werde.</p>

<h1>Tag 4</h1>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6213.html">The rise and fall of Internet voting in Norway</a> klingt interessant, wenn ich um die Uhrzeit schon aufnahmefähig bin.</p>

<p><a href="https://events.ccc.de/congress/2014/Fahrplan/events/6214.html">Attribution revolution</a> ist für mich auch beruflich ein Must. Mal sehen, ob sich Ideen aus dem Vortrag für <a href="http://wikimania2014.wikimedia.org/wiki/Submissions/How_to_stay_out_of_jail_and_still_use_images_from_Wikimedia_Commons">ein Projekt bei uns</a> nutzen lassen.</p>

<p>Dann habe ich noch das <a href="https://events.ccc.de/congress/2014/Fahrplan/events/6562.html">Closing Event</a> auf dem Zettel. Und natürlich Party.</p>

<p>Wird das alles klappen? Ich fürchte nicht. Aber aufgeregt bin ich schon beim Durchsehen des Programms&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Links, frische (und halbfrische) Links!]]></title>
    <link href="http://blog.johl.io/blog/2014/12/07/links/"/>
    <updated>2014-12-07T21:25:00+01:00</updated>
    <id>http://blog.johl.io/blog/2014/12/07/links</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://www.theeuropeanlibrary.org/tel4/access/data/opendata/details?id=opendata">European Library released Linked Open Data for 82 million bibliographic records from 25 member libraries. All CC0.</a></li>
<li><a href="https://jakevdp.github.io/blog/2014/11/11/the-hipster-effect-interactive/">The Hipster Effect: An IPython Interactive Exploration</a></li>
<li><a href="http://spectrum.ieee.org/computing/networks/osi-the-internet-that-wasnt">OSI: The Internet That Wasn’t. How TCP/IP eclipsed the Open Systems Interconnection standards to become the global protocol for computer networking</a></li>
<li><a href="https://en.wikipedia.org/wiki/History_of_radio#Legal_issues_with_radio">„When radio was introduced in the 1920s many predicted the end of records. Radio was a free medium for the public to hear music for which they would normally pay. While some companies saw radio as a new avenue for promotion, others feared it would cut into profits from record sales and live performances. Many companies had their major stars sign agreements that they would not appear on radio.&#8221;</a></li>
<li><a href="http://rijksemotions.com/">Rijks Emotions is a student project from Hyper Island, using the Rijksmuseum and Sightcorp api, matching people&#8217;s emotions with their relatives that hang on the museum&#8217;s walls.</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Was gibt es hier zu sehen? Mediawiki APIs hacken]]></title>
    <link href="http://blog.johl.io/blog/2014/11/23/around-me/"/>
    <updated>2014-11-23T16:33:00+01:00</updated>
    <id>http://blog.johl.io/blog/2014/11/23/around-me</id>
    <content type="html"><![CDATA[<p>Chantek ist ein besonderer Orang-Utan. Im Yerkes Regional Primate Research Center geboren lernte er innerhalb eines Forschungsprojektes mittels der amerikanischen Gebärdensprache (ASL) mit Menschen zu kommunizieren und gesprochenes Englisch zu verstehen, Grundlagen des Umgangs mit Geld und Spiele. Mit fünfeinhalb Jahren wurde ihm der Stand eines etwa zweijährigen Kindes attestiert, wobei er in einigen Bereichen (z. B. Sprachverständnis und Werkzeugnutzung) die Fertigkeiten eines vierjährigen Kindes aufwies. Über Chantek gibt es <a href="http://de.wikipedia.org/wiki/Chantek">in der Wikipedia</a> noch mehr zu lesen, als ich hier zitiert und zusammengefasst habe.</p>

<p><a href="https://github.com/hay/chantek">Chantek</a> ist aber auch der Name eines Hacks, der auf dem <a href="http://www.mediawiki.org/wiki/Amsterdam_Hackathon_2014">Mediawiki Hackathon 2014 in Amsterdam</a> von <a href="http://www.haykranen.nl/">Hay Kranen</a> gebastelt wurde. Auf Niederländisch heisst &#8220;Api&#8221; auch <a href="http://nl.wikipedia.org/wiki/Apen">Affe</a>. Eine API, die menschliche Sprache (zumindest ein bisschen) versteht, ist gut geeignet, um nach dem sprechenden Affen Chantek benannt zu werden.</p>

<p>Über die Mediawiki API habe ich im letzten Blogbeitrag bereits <a href="http://blog.johl.io/blog/2014/11/17/mediawiki-api/">eine umfassende Einführung</a> geschrieben. Chantek vereinfacht diese API auf besonders schlanke Weise und macht die Unterhaltung ein bisschen angenehmer. Um Properties bei Wikidata abzufragen und Titel darzustellen, brauche ich bei der klassischen <a href="http://www.mediawiki.org/wiki/Wikibase/API">Mediawiki API zu Wikidata</a> typischerweise mehrere API-Calls. Bei Chantek kann ich zum Beispiel sagen, dass mich nur Abfrageergebnisse auf Deutsch interessieren und ich bekomme die Werte dann auch mit ihrer deutschen Bezeichnung zurück.</p>

<h3>Über die Grenzen der Same-Origin-Policy hinweg mit CORS</h3>

<p>Chantek ist eine Python-Anwendung, die die <a href="http://enable-cors.org/">CORS-Spezifikation</a> implementiert, um JavaScript-Anwendungen in Web-Anwendungen zu ermöglichen, Daten auszulesen und darzustellen. Normalerweise gibt es bei JavaScript im Browser die <a href="http://de.wikipedia.org/wiki/Same-Origin-Policy">Same-Origin-Policy</a>, die verhindert, dass Daten aus beliebigen (und damit potenziell unsicheren) Quellen einfach so nachgeladen werden können: Clientseitiges JavaScript kann nur auf Daten der Domain zugreifen, woher auch das JavaScript selbst geladen wurde. Bei API-Calls stellt sich diese Maßnahme als gelinde gesagt schwierig dar. Um diese Beschränkung zu umgehen, gibt es zum Beispiel <a href="http://de.wikipedia.org/wiki/JavaScript_Object_Notation#JSONP">JSONP</a>, das aber selbst nicht unproblematisch ist. CORS ist eine Möglichkeit, die Grenzen der Same-Origin-Policy zu überschreiten, die auch Authentifizierung und feinere Sicherheitsabstufungen beinhaltet und vom W3C spezifiziert wurde.</p>

<p>Leider ist CORS nicht in allen Browsern vorhanden. Wie man browserunhabhängig prüft, ob CORS zur Verfügung steht (bei den meisten modernen Browsern ist das der Fall), zeigt etwa <a href="http://www.html5rocks.com/en/tutorials/cors/">dieses Tutorial von Monsur Hossain</a> und der darin benutzte Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">createCORSRequest</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">url</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">();</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="s2">&quot;withCredentials&quot;</span> <span class="k">in</span> <span class="nx">xhr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Check if the XMLHttpRequest object has a &quot;withCredentials&quot; property.</span>
</span><span class='line'>    <span class="c1">// &quot;withCredentials&quot; only exists on XMLHTTPRequest2 objects.</span>
</span><span class='line'>    <span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">url</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">XDomainRequest</span> <span class="o">!=</span> <span class="s2">&quot;undefined&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Otherwise, check if XDomainRequest.</span>
</span><span class='line'>    <span class="c1">// XDomainRequest only exists in IE, and is IE&#39;s way of making CORS requests.</span>
</span><span class='line'>    <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XDomainRequest</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">url</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Otherwise, CORS is not supported by the browser.</span>
</span><span class='line'>    <span class="nx">xhr</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">xhr</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Zeig mir meine Umgebung, Wikidata!</h3>

<p>Mit Chantek (und CORS) wollte ich eine JavaScript-Webanwendung schreiben, die mir anzeigt, was es in Wikidata um mich herum an geogetaggten Wisssensgegenständen gibt. In Berlin (zumindest innerhalb des S-Bahn-Rings) ist das einiges — viele interessante Orte sinde nur ein paar Hundert Meter weit entfernt und haben einen Wikipedia-Artikel.  Auf dem Land müsste ich meine Anwendung vermutlich ein bisschen erweitern: ein Radius von 500m ist nicht besonders üppig für manche Gegenden. Auch, dass ich Wissensgegenstände nur auf Deutsch suche und Artikel in der deutschsprachigen Wikipedia dazu anzeige, könnte eine überarbeitete Version meiner Anwendung als Parameter änderbar machen.</p>

<p>Als kleiner, schneller Hack zwischendurch, aufgespielt auf einen Webserver, hat mir meine Anwendung aber durchaus Spaß bereitet. Mit dem Mobiltelefon kann ich so schauen, was Wikidata für meine Umgebung anzeigt.</p>

<p>Ein API-Call, um Dinge im meiner Umgebung zu finden, kann mit Chantek
etwa so aussehen:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">http</span><span class="o">:</span><span class="c1">//chantek.bykr.org/wikidata/query?q=around[625,52.205,0.119,15]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hiermit frage ich Chantek (über die <a href="http://wdq.wmflabs.org/api_documentation.html">WikidataQuery-API</a>) nach Wikidata-Wissensgegenständen im Umkreis von 15km um Cambridge in England: der erste Parameter (625) bezieht sich auf den Planeten, für den die Koordinaten gelten (Erde), die nächsten zwei sind die Koordinaten von Cambridge und mit 15 gebe ich den Radius an. Auch Brüche sind bei der Angabe des Radius möglich, 0.5 ist also 500m.</p>

<p>Jetzt fehlen mir nur noch meine aktuellen Koordinaten. Moderne Browser unterstützen das HTML5-Feature Geolocation, mit der JavaScript-Bibliothek <a href="http://modernizr.com/">Modernizr</a> kann ich überprüfen, ob dieses Feature vorhanden ist. Da es Privatsphärenbedenken bei der Abfrage von Geokoordinaten gibt, muss der Browser bei der ersten Abfrage der Koordinaten des Standorts von einer neuen Seite die Benutzerin oder den Benutzer fragen, ob das so in Ordnung ist. Wenn zugestimmt wird, können wir die Koordinaten benutzen, eine Abfrage starten und bekommen eine Liste von Wikidata-Items zurück. Tatsächlich erzeugen wir zuerst einen CORS-Request und als Callback-Funktion geht es gleich in die nächste Abfrage, denn wir wollen ja für jedes Element der Liste einen Titel und eine Wikipedia-Seite haben. Das könnte zum Beispiel so aussehen:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">locate_me</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Check if we can do HTML5 geolocation</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">Modernizr</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">position</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">lat</span> <span class="o">=</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">latitude</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">lon</span> <span class="o">=</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">longitude</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">chantek</span> <span class="o">=</span> <span class="s2">&quot;http://chantek.bykr.org/wikidata/&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="c1">// Query data around me</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="s2">&quot;query?q=around[625,&quot;</span> <span class="o">+</span> <span class="nx">lat</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="nx">lon</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="s2">&quot;0.5]&amp;callback=?&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">query_xhr</span> <span class="o">=</span> <span class="nx">createCORSRequest</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="nx">chantek</span><span class="o">+</span><span class="nx">query</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">query_xhr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;CORS not supported&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="nx">query_xhr</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">query_xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">response</span><span class="p">).</span><span class="nx">response</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// Call queried entities and display them</span>
</span><span class='line'>              <span class="kd">var</span> <span class="nx">entity</span> <span class="o">=</span> <span class="s2">&quot;entity?q=Q&quot;</span><span class="o">+</span> <span class="nx">value</span> <span class="o">+</span> <span class="s2">&quot;&amp;lang=de&amp;callback=?&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="kd">var</span> <span class="nx">entity_xhr</span> <span class="o">=</span> <span class="nx">createCORSRequest</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="nx">chantek</span><span class="o">+</span><span class="nx">entity</span><span class="p">);</span>
</span><span class='line'>              <span class="nx">entity_xhr</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">entity_xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">response</span><span class="p">).</span><span class="nx">response</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#location-list&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;li&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;big&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;a href=&quot;</span> <span class="o">+</span> <span class="s2">&quot;\&quot;&quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="nx">data</span><span class="p">[</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]].</span><span class="nx">sitelinks</span><span class="p">.</span><span class="nx">de</span><span class="p">.</span><span class="nx">url</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;\&quot;&gt;&quot;</span><span class="o">+</span>
</span><span class='line'>                    <span class="nx">data</span><span class="p">[</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]].</span><span class="nx">labels</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;/a&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;/big&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s2">&quot;&lt;/li&gt;&quot;</span>
</span><span class='line'>                <span class="p">);</span>
</span><span class='line'>              <span class="p">};</span>
</span><span class='line'>              <span class="nx">entity_xhr</span><span class="p">.</span><span class="nx">onerror</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Error making the request&#39;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">};</span>
</span><span class='line'>              <span class="nx">entity_xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>          <span class="p">};</span>
</span><span class='line'>          <span class="nx">query_xhr</span><span class="p">.</span><span class="nx">onerror</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Error making the request&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">};</span>
</span><span class='line'>          <span class="nx">query_xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Geolocation not supported&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Der fertige Hack</h3>

<p>Mit ein bisschen UI und HTML drumherum habe ich diesen kleinen Hack unter <a href="http://www.johl.io/aroundme-wikidata/">http://www.johl.io/aroundme-wikidata/</a> ins Netz gestellt. Ich wünsche viel Spaß!</p>

<p>In der Nähe des U-Bahnhofs Eberswalder Straße in Berlin sieht das auf meinem Mobiltelefon etwa so aus:</p>

<p><img src="http://f.cl.ly/items/262K2m0k4531221t0g1R/aroundme-wikidata.png" width="300"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Die Cola oder das Cola? Mediawiki APIs hacken]]></title>
    <link href="http://blog.johl.io/blog/2014/11/17/mediawiki-api/"/>
    <updated>2014-11-17T22:10:00+01:00</updated>
    <id>http://blog.johl.io/blog/2014/11/17/mediawiki-api</id>
    <content type="html"><![CDATA[<p>Die Web-API von Mediawiki (und damit von den meisten Wikimedia-Projekten) ist zwar nicht gerade versteckt, aber meiner Meinung nach viel zu unbekannt. In loser Folge werde ich ein paar Hacks mit APIs für verschiedene Projekte vorstellen, auch um dazu anzuregen, selbst mit der Infrastruktur zu spielen.</p>

<h3>Die Web-API von Mediawiki</h3>

<p>Mediawiki hat eine RESTful Web-API. Leider ist API im Mediawiki-Umfeld ein mehrfach belegtes Wort, so dass es auch eine API gibt, um eigene Erweiterungen in PHP zu schreiben; diese API meine ich in dem Fall nicht, sondern die Schnittstelle, mit der sich Daten und Inhalte per <code>HTTP</code> aus Mediawiki holen lassen.</p>

<p>Zunächst gibt es da einen Endpunkt. Bei den Wikimedia-Projekten liegt dieser unter <code>/w/api.php</code>, bei dem unten benutzten <code>Wiktionary</code> also unter <code>https://de.wiktionary.org/w/api.php</code>. Praktischerweise ist der Endpunkt für die API-Calls auch gleich eine URL zur Dokumentation. Einfach den Endpunkt im Browser eingeben es erscheint eine Seite, auf der die möglichen Calls verzeichnet sind und auch mit Beispielen erklärt werden.</p>

<p>Ein vollständiger API-Call könnte etwa so aussehen:</p>

<p><code>https://de.wiktionary.org/w/api.php?format=json&amp;action=query&amp;prop=revisions&amp;rvprop=content&amp;titles=Cola</code></p>

<p>Schauen wir uns den API-Call mal genauer an und zerlegen ihn in seine Einzelteile.</p>

<h4>Das Format für die Serialisierung</h4>

<p><code>format=json</code></p>

<p>Hiermit sagen wir dem Wikimedia-Web-Service, dass wir den Rückgabewert gern als <code>JSON</code> formatiert bekommen wollen. Alternativ können wir zur Anzeige im Webbrowser das auch schön formatiert mit dem Aufruf <code>format=jsonfm</code> bekommen – das ist manchmal für das Debugging übersichtlicher und hilfreicher. Die API unterstützt noch andere Ausgabeformate wie <code>WDDX</code>, <code>XML</code>, <code>YAML</code> und eine native PHP-Serialisierung, aber möglicherweise werde diese in Zukunft nicht mehr bedient. <code>JSON</code> wird stark präferiert und sollte wenn immer möglich benutzt werden.</p>

<h4>Die Action</h4>

<p><code>action=query</code></p>

<p>Die &#8220;Action&#8221;, also sozusagen das Verb, ist der eigentliche Befehl, der aufgerufen wird. Es gibt etliche solche Actions, die in der Mediawiki-API dokumentiert sind, Extensions können noch weitere Actions hinzufügen, die Actions zu Wikidata etwa beginnen mit &#8220;wb&#8221; für <a href="http://wikiba.se/">Wikibase</a>. Hier benutzen wir <code>query</code>zur Abfrage von Daten.</p>

<p>Die Action <code>query</code> ist selbst wieder umfangreich dokumentiert, wir
schauen uns hier ein paar beispielhafte Parameter an.</p>

<h4>Action-spezifische Parameter</h4>

<p><code>titles=Cola</code></p>

<p>Wir fragen hier die API nach den Daten einer Wiki-Seite mit dem Titel &#8220;Cola&#8221;. In der Abfrage werden Titel URL-kodiert, wenn der Titel also ein Leerzeichen enthält, wird dieses zu <code>%20</code>. Wenn mehrere Seiten gleichzeitig abgefragt werden können (und sollten) sie kombiniert werden, um nicht durch mehrere Abfragen hintereinander die Netzwerklast unnötig zu erhöhen: <code>titles=PageA|PageB|PageC</code></p>

<p><code>prop=revisions</code></p>

<p>Mit diesem Parameter können wir eine Revision der Seite angeben. Wenn wir keine weiteren Informationen zur Revision angeben bekommen wir die aktuelle Version der Seite.</p>

<p><code>rvprop=content</code></p>

<p>Mit diesem Parameter sagen wir der API, dass wir den Inhalt der Seite haben wollen. Hätten wir stattdessen zum Beispiel <code>rvprop=content|user</code> angegen, bekämen wir den Inhalt un den Benutzer, der die letzte Änderung vorgenommen hat.</p>

<p>Es gibt über die API und mögliche Parameter und Actions noch viel mehr zu sagen, aber als Beispiel reicht das erstmal. Die Dokumentation zur API ist noch viel umfangreicher. Ein guter Einstiegspunkt ist die <a href="https://www.mediawiki.org/wiki/API:Main_page">Dokumentation auf Mediawiki</a>, die ich hier teilweise übersetzt habe.</p>

<p>Eine gute Einführung in die API gibt es auch als Video:</p>

<iframe src="https://commons.wikimedia.org/wiki/File%3AThe_MediaWiki_Web_API_and_How_to_use_it_-_San_Francisco_Wikipedia_Hackathon_2012.ogv?embedplayer=yes" width="512" height="288" frameborder="0" ></iframe>


<div class="description mw-content-ltr en" dir="ltr" lang="en"  style="font-size: small;">Video from the <a href="http://blog.johl.io//www.mediawiki.org/wiki/San_Francisco_Hackathon_2012" class="extiw" title="mw:San Francisco Hackathon 2012">San Francisco Hackathon 2012</a>: How to use the <a href="http://blog.johl.io//www.mediawiki.org/wiki/API" class="extiw" title="mw:API">MediaWiki API</a>. Speaker is <a href="https://commons.wikimedia.org/w/index.php?title=User:Catrope&amp;action=edit&amp;redlink=1" class="new" title="User:Catrope (page does not exist)">Roan Kattouw</a>, facilitated by <a href="https://commons.wikimedia.org/wiki/User:Sumanah" title="User:Sumanah">Sumana Harihareswara</a>. <a class="external text" href="https://www.mediawiki.org/wiki/API/Tutorial">Tutorial reference includes useful links and instructions.</a></div>


<p></p>


<h3>Artikel von Substantiven mit <code>migrationsschatten.py</code> abfragen</h3>

<p>Als erstes Beispiel für eine Spielerei mit der API geht es um Zweifelsfragen der deutschen Sprache. Eine sehr gute Freundin von mir, beneidenswert bilingual aufgewachsen mit Deutsch und Englisch als Muttersprache, erzählte mir vor einiger Zeit davon, dass sie dann doch manchmal überrascht sei, welches grammatikalische Geschlecht und damit welchen Artikel ein Wort im Deutschen hat: <em>&#8220;<strong>Der</strong> Knoblauch? Ernsthaft?&#8221;</em>. Wie gesagt, es handelt sich bei ihr um eine Muttersprachlerin, aber diesen Einwand wischte sie schnell beiseite mit <em>&#8220;Ach, das ist eben mein Migrationsschatten&#8221;</em>.</p>

<p>Das Problem ist aber häufig genug, um sich hinzusetzen und ein kleines Programm zu schreiben, das Wiktionary nach dem korrekten Artikel befragt. Heisst es &#8220;der Laptop&#8221; oder &#8220;das Laptop&#8221;? Und was war mit der Werbung einer österreichischen Energydrink-Marke, die von &#8220;das Cola&#8221; sprach? Ist das korrekt?</p>

<p>Das Progrämmchen ist ein bisschen älter, aber ich habe es seitdem ein bisschen poliert und umgeschrieben. Die Freundin mit der Frage nach den Artikeln benutzt es nach eigener Aussage regelmäßig. Im Original ist es <a href="https://gist.github.com/johl/5515041">als gist auf Github</a> verfügbar, aber gehen wir das Programm doch mal der Reihe nach durch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">print_function</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Es beginnt mit ein paar Imports. Das Programm ist für Python 2.7 geschrieben, eine Portierung nach Python3 lasse ich mal als Aufgabe für die Leserin oder den Leser (<code>urllib2</code> und <code>json</code> bräuchten dafür Liebe, die über die automatische Portierung mit
<a href="https://docs.python.org/2/library/2to3.html">2to3</a> hinausgeht).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="s">&#39;Abfrage mit: </span><span class="si">%s</span><span class="s"> Substantiv&#39;</span> <span class="o">%</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="n">substantiv</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wenn kein Substantiv angegeben ist, ist die ganze Sache auch schon vorbei, ansonsten nehmen wir an, dass der erste Kommandozeilenparameter das gesuchte Substantiv ist.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span>
</span><span class='line'>        <span class="s">&#39;http://de.wiktionary.org/w/api.php?&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&#39;format=json&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&#39;&amp;action=query&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&#39;&amp;prop=revisions&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&#39;&amp;rvprop=content&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&#39;&amp;titles=&#39;</span> <span class="o">+</span>
</span><span class='line'>        <span class="n">substantiv</span>
</span><span class='line'>        <span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="k">except</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">URLError</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="s">&#39;Problem beim Zugriff auf Wiktionary.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wir basteln uns die API-Anfrage zusammen. Oben ist erklärt, wieso die Abfrage so aussieht, wie sie aussieht. Wenn die Abfrage über das Internet nicht klappen sollte, brechen wir hier ab.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">content</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</span><span class='line'><span class="n">page</span> <span class="o">=</span> <span class="n">content</span><span class="p">[</span><span class="s">&#39;query&#39;</span><span class="p">][</span><span class="s">&#39;pages&#39;</span><span class="p">][</span><span class="n">content</span><span class="p">[</span><span class="s">&#39;query&#39;</span><span class="p">][</span><span class="s">&#39;pages&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">]]</span>
</span><span class='line'><span class="k">if</span> <span class="s">&#39;revisions&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">page</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span>
</span><span class='line'>            <span class="s">&#39;Substantiv nicht im deutschsprachigen Wiktionary verzeichnet.&#39;</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'><span class="n">wikitext</span> <span class="o">=</span> <span class="p">(</span><span class="n">page</span><span class="p">[</span><span class="s">&#39;revisions&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;*&#39;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Der Seiteninhalt wird als <code>JSON</code> eingelesen und in eine Python-Datenstruktur hineingeschlürft. Wenn es keine Seite mit dem Titel gibt, der gewünscht ist, brechen wir ab. <a href="http://blog.johl.io/blog/2013/10/20/autovivication/">Python kennt schließlich keine Autovivication bei Collections</a>, also passen wir auf wie ein Luchs, dass wir nicht auf eine Struktur zugreifen, für die es keinen Key gibt.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">match</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;===\s?,\s?&#39;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s">&#39;&#39;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s">&#39;(,\s?(,\s?)?)*&#39;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s">&#39;\s?===&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">wikitext</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="s">&#39;Kein Substantiv!&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Es folgt eine epische <em>regular expression</em>, mit der der <a href="https://de.wikipedia.org/wiki/Wikitext">Wikitext</a> geparst wird. Leider wird im Wiktionary nicht ganz durchgängig dasselbe Pattern für die Angabe des grammatischen Geschlechts genutzt. Aber irgendwie sowas wie &#8220;m&#8221; oder &#8220;mf&#8221; oder &#8220;m,f,n&#8221; steht hinter einer Template-Variable, die ein Substantiv bezeichnet. Wenn nicht mal dieses Pattern gefunden wird, ist der Suchstring wohl kein Substantiv und wir verabschieden uns aus dem Programm.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">genera</span> <span class="o">=</span> <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&#39;^[mfn]$&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">),</span>
</span><span class='line'>                <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">,</span> <span class="n">match</span><span class="o">.</span><span class="n">groups</span><span class="p">()))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wir filtern aus den <em>capturing brackets</em> alles heraus, was nicht &#8220;m&#8221;, &#8220;f&#8221;, oder &#8220;n&#8221; ist. Ich finde da eine Lösung mit zwei Filtern (und anonymen Lambda-Funktionen) am elegantesten, aber das ist natürlich Geschmackssache.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">m</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;der &quot;</span> <span class="o">+</span> <span class="n">substantiv</span> <span class="k">for</span> <span class="n">genus</span> <span class="ow">in</span> <span class="n">genera</span> <span class="k">if</span> <span class="n">genus</span> <span class="o">==</span> <span class="s">&quot;m&quot;</span><span class="p">]</span>
</span><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;die &quot;</span> <span class="o">+</span> <span class="n">substantiv</span> <span class="k">for</span> <span class="n">genus</span> <span class="ow">in</span> <span class="n">genera</span> <span class="k">if</span> <span class="n">genus</span> <span class="o">==</span> <span class="s">&quot;f&quot;</span><span class="p">]</span>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;das &quot;</span> <span class="o">+</span> <span class="n">substantiv</span> <span class="k">for</span> <span class="n">genus</span> <span class="ow">in</span> <span class="n">genera</span> <span class="k">if</span> <span class="n">genus</span> <span class="o">==</span> <span class="s">&quot;n&quot;</span><span class="p">]</span>
</span><span class='line'><span class="n">artikel</span> <span class="o">=</span> <span class="n">m</span> <span class="o">+</span> <span class="n">f</span> <span class="o">+</span> <span class="n">n</span>
</span></code></pre></td></tr></table></div></figure>


<p>Mit ein paar <em>list comprehensions</em> bauen wir uns drei Listen mit den gefilterten Ergebnissen, die wir dann zu einer flachen Ergebnisliste vereinigen (<code>artikel</code>). Natürlich kann ein Substantiv mehr als ein grammtisches Geschlecht und damit mehr als einen gültigen Artikel haben.</p>

<p>Warum basteln wir uns eine Liste? Nun, darum:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">map</span><span class="p">(</span><span class="k">print</span><span class="p">,</span> <span class="n">artikel</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lieber ein gedingenes <code>map</code> auf eine Liste als eine <code>for</code>-Schleife. Da wir <code>print</code> als Funktion benutzen können (wir haben extra <code>from __future__ import print_function</code> benutzt), können wir diese Funktion auf alle möglichen Ergebnis-Strings anwenden.</p>

<p>Was gibt dieses Programm jetzt aus? Nun, schauen wir mal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">migrationsschatten</span><span class="o">.</span><span class="n">py</span> <span class="n">Knoblauch</span>
</span><span class='line'><span class="n">der</span> <span class="n">Knoblauch</span>
</span></code></pre></td></tr></table></div></figure>


<p>oder auch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">migrationsschatten</span><span class="o">.</span><span class="n">py</span> <span class="n">Ketchup</span>
</span><span class='line'><span class="n">der</span> <span class="n">Ketchup</span>
</span><span class='line'><span class="n">das</span> <span class="n">Ketchup</span>
</span></code></pre></td></tr></table></div></figure>


<p>oder gar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">migrationsschatten</span><span class="o">.</span><span class="n">py</span> <span class="n">Joghurt</span>
</span><span class='line'><span class="n">der</span> <span class="n">Joghurt</span>
</span><span class='line'><span class="n">die</span> <span class="n">Joghurt</span>
</span><span class='line'><span class="n">das</span> <span class="n">Joghurt</span>
</span></code></pre></td></tr></table></div></figure>


<p>Und was ist mit der Frage aus der Überschrift?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> </span>
<span class='line-number'> </span>
<span class='line-number'> </span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">migrationsschatten</span><span class="o">.</span><span class="n">py</span> <span class="n">Cola</span>
</span><span class='line'><span class="n">die</span> <span class="n">Cola</span>
</span><span class='line'><span class="n">das</span> <span class="n">Cola</span>
</span></code></pre></td></tr></table></div></figure>


<p>So seltsam das für bundesdeutsche Sprecherinnen und Sprecher klingen mag, <strong>das</strong> Cola ist okay, sagt Wiktionary. Es handelt sich um einen <a href="https://de.wikipedia.org/wiki/Austriazismus">Austriazismus</a>.</p>

<p><a href="https://de.wiktionary.org/wiki/leiwand">Leiwand</a>!</p>

<p>Wie bereits gesagt, das vollständige Programm <a href="https://gist.github.com/johl/5515041">findet sich hier</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Links, Links, Links]]></title>
    <link href="http://blog.johl.io/blog/2014/11/16/links/"/>
    <updated>2014-11-16T13:06:00+01:00</updated>
    <id>http://blog.johl.io/blog/2014/11/16/links</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://github.com/mapmeld/profanity65#profanity65">Encrypt your e-mail with PGP and random profanity</a></li>
<li><a href="http://learnlispthehardway.org/">Learn Lisp The Hard Way</a></li>
<li><a href="https://wwwwwwwwwwwwwwwwwwwwww.bitnik.org/r/">&#8220;The Random Darknet Shopper is an automated online shopping bot which we provide with a budget of $100 in Bitcoins per week. Once a week the bot goes on shopping spree in the deep web where it randomly choses and purchases one item and has it mailed to us.&#8221;</a></li>
<li><a href="http://www.washingtonpost.com/news/storyline/wp/2014/11/11/the-mathematician-who-proved-why-hipsters-all-look-alike/">The mathematician who proved why hipsters all look alike: What brain neurons tell us about the &#8216;hipster effect&#8217; when all contrarians end up looking the same</a></li>
<li><a href="http://openoil.net/2014/11/11/openoil-launches-repository-385-oil-contracts-from-54-countries-one-click-away/">OpenOil launches repository: 385 oil contracts from 54 countries, one click away</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
